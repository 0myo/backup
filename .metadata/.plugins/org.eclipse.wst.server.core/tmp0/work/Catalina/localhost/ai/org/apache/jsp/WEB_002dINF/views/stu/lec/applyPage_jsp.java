/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-11-27 01:48:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.stu.lec;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class applyPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662347357502L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://unpkg.com/ag-grid-community/dist/ag-grid-community.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<!-- MAIN-CONTENT -->\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-xl-8 pr-2 pl-0\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"card mb-0\">\r\n");
      out.write("				<div class=\"card-header tab-regular\">\r\n");
      out.write("					<ul class=\"nav nav-tabs card-header-tabs\" id=\"myTab\" role=\"tablist\">\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link active show\"\r\n");
      out.write("							id=\"card-tab-1\" data-toggle=\"tab\" href=\"#card-1\" role=\"tab\"\r\n");
      out.write("							aria-controls=\"card-1\" aria-selected=\"true\">전체강의</a></li>\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\" id=\"card-tab-2\"\r\n");
      out.write("							data-toggle=\"tab\" href=\"#card-2\" role=\"tab\"\r\n");
      out.write("							aria-controls=\"card-2\" aria-selected=\"false\">신청강의</a></li>\r\n");
      out.write("\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<!-- 탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1 -->\r\n");
      out.write("				<div class=\"card-body mb-0\" style=\"height: 675px;\">\r\n");
      out.write("					<div class=\"tab-content\" id=\"myTabContent\">\r\n");
      out.write("						<div class=\"tab-pane fade active show\" id=\"card-1\" role=\"tabpanel\"\r\n");
      out.write("							aria-labelledby=\"card-tab-1\">\r\n");
      out.write("							<div class=\"card\">\r\n");
      out.write("								<div class=\"card-body\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("									<div id=\"myGrid\" class=\"ag-theme-alpine\" style=\"height: 500px\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"tab-pane fade\" id=\"card-2\" role=\"tabpanel\"\r\n");
      out.write("							aria-labelledby=\"card-tab-2\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<div class=\"card\">\r\n");
      out.write("								<div class=\"card-header\">\r\n");
      out.write("									<table>\r\n");
      out.write("										<thead>\r\n");
      out.write("											<tr>\r\n");
      out.write("												<th><h4>신청결과</h4></th>\r\n");
      out.write("												<th><span id=\"curCredit\"></span> / <span id=\"maxCredit\"></span> (신청학점/신청가능학점)</th>\r\n");
      out.write("											</tr>\r\n");
      out.write("										</thead>\r\n");
      out.write("									</table>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"card-body\" id=\"appliedDIV\"></div>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("			<!-- 본문 1 -->\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"col-xl-4 pl-2 pr-0 \">\r\n");
      out.write("			<div class=\"card mb-0\"\r\n");
      out.write("				style=\"display: inline-block; position: relative;\">\r\n");
      out.write("\r\n");
      out.write("				<canvas id=\"grid\" width=\"510\" height=\"744\"\r\n");
      out.write("					style=\"vertical-align: top; z-index: 3\"></canvas>\r\n");
      out.write("				<canvas id=\"outline\" width=\"510\" height=\"744\"\r\n");
      out.write("					style=\"position: absolute; left: 0; top: 0; z-index: 2;\"></canvas>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- ================================================= -->\r\n");
      out.write("		<!-- MAIN-CONTENT 끝 -->\r\n");
      out.write("		<!-- ================================================= -->\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var rowData2 = JSON.parse(localStorage.getItem(\"ajaxLectureList\"));\r\n");
      out.write("/////////////////////////////////////////////////////////\r\n");
      out.write("// canvas\r\n");
      out.write("/////////////////////////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("var dates = [ \"월\", \"화\", \"수\", \"목\", \"금\" ];\r\n");
      out.write("var hours = [ \" 9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\" ];\r\n");
      out.write("\r\n");
      out.write("const grid = document.getElementById('grid');\r\n");
      out.write("const outline = document.getElementById('outline');\r\n");
      out.write("const gridCtx = grid.getContext(\"2d\");\r\n");
      out.write("const outlinegridCtx = outline.getContext(\"2d\");\r\n");
      out.write("\r\n");
      out.write("function drawGrid(){\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("for (var i = 50; i < 744; i = i + 70) {\r\n");
      out.write("\r\n");
      out.write("	gridCtx.beginPath();\r\n");
      out.write("	gridCtx.moveTo(50, i);\r\n");
      out.write("	gridCtx.lineTo(505, i);\r\n");
      out.write("	gridCtx.stroke();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("for (var i = 50; i <= 520; i = i + 91) {\r\n");
      out.write("	gridCtx.beginPath();\r\n");
      out.write("	gridCtx.moveTo(i, 50);\r\n");
      out.write("	gridCtx.lineTo(i, 680);\r\n");
      out.write("	gridCtx.stroke();\r\n");
      out.write("}\r\n");
      out.write("var horiIndex = 85;\r\n");
      out.write("for (var i = 0; i < dates.length; i++) {\r\n");
      out.write("	gridCtx.font = \"20px malgun gothic\";\r\n");
      out.write("	gridCtx.fillStyle = \"rgb(162, 162, 162)\";\r\n");
      out.write("	gridCtx.fillText(dates[i], horiIndex, 30);\r\n");
      out.write("	horiIndex = horiIndex + 91;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var vertiIndex = 65;\r\n");
      out.write("for (var i = 0; i < hours.length; i++) {\r\n");
      out.write("	gridCtx.font = \"15px malgun gothic\";\r\n");
      out.write("	gridCtx.fillStyle = \"rgb(162, 162, 162)\";\r\n");
      out.write("	gridCtx.fillText(hours[i], 30, vertiIndex);\r\n");
      out.write("	vertiIndex = vertiIndex + 70;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("/////////////////////////////////////////////////////////\r\n");
      out.write("						// ag-grid\r\n");
      out.write("/////////////////////////////////////////////////////////\r\n");
      out.write("const columnDefs2 = [\r\n");
      out.write("    { headerName:\"과목명\",field: \"subjName\" ,maxWidth:130},\r\n");
      out.write("    { headerName:\"단과대\",field: \"colName\" ,maxWidth:100},\r\n");
      out.write("    { headerName:\"교양코드\",field: \"geCd\" ,maxWidth:130},\r\n");
      out.write("    { headerName:\"학과코드\",field: \"majorName\" ,maxWidth:120},\r\n");
      out.write("    { headerName:\"교수명\",field: \"profName\" ,maxWidth:110},\r\n");
      out.write("    { headerName:\"학점\",field: \"credit\" ,maxWidth:80},\r\n");
      out.write("    { headerName:\"강의실\",field: \"classroom\",maxWidth:100},\r\n");
      out.write("    { headerName:\"수강인원\",field: \"stuNum\" ,maxWidth:130},\r\n");
      out.write("    { headerName:\"최대인원\",field: \"maxStuNum\" ,maxWidth:130},\r\n");
      out.write("    { headerName:\"대상학년\",field: \"targetGrade\" ,maxWidth:130},\r\n");
      out.write("    { headerName:\"날짜1\",field: \"lecDate1\",maxWidth:130},\r\n");
      out.write("    { headerName:\"날짜2\",field: \"lecDate2\" ,maxWidth:130},\r\n");
      out.write("];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	const gridOptions = {\r\n");
      out.write("	        defaultColDef: {\r\n");
      out.write("	            sortable:true,\r\n");
      out.write("	            filter:true,\r\n");
      out.write("	            resizable:true,\r\n");
      out.write("	            editable:false\r\n");
      out.write("	    },\r\n");
      out.write("	    columnDefs: columnDefs2,\r\n");
      out.write("	    rowData: rowData2,\r\n");
      out.write("	    animateRows: true,\r\n");
      out.write("	    pagination:true,\r\n");
      out.write("	    paginationAutoPageSize:true,\r\n");
      out.write("	    getRowId: params => params.data.lecCd,\r\n");
      out.write("	    \r\n");
      out.write("	    \r\n");
      out.write("	    //마우스 올렸을때//\r\n");
      out.write("	    onCellMouseOver :function(params){\r\n");
      out.write("	    	\r\n");
      out.write("	    	outlinegridCtx.strokeStyle = \"orange\";\r\n");
      out.write("\r\n");
      out.write(" 			outlinegridCtx.lineWidth = 5;\r\n");
      out.write("	    	\r\n");
      out.write("	     var firstSchdule = params.data.lecDate1;\r\n");
      out.write("	     var secondSchdule = params.data.lecDate2;\r\n");
      out.write("	     var schedules = [];\r\n");
      out.write("	     schedules.push(firstSchdule);\r\n");
      out.write("	     if(secondSchdule){\r\n");
      out.write("	    	 schedules.push(secondSchdule);\r\n");
      out.write("	     }\r\n");
      out.write("	     \r\n");
      out.write("	     for (var i = 0; i < schedules.length; i++) {\r\n");
      out.write("	    	 \r\n");
      out.write("	 			var startTime = parseInt(schedules[i].substring(2, 4));\r\n");
      out.write("	 			var endTime = parseInt(schedules[i].substring(10, 12));\r\n");
      out.write("	 			var y = 50 + (70 * (startTime - 9));\r\n");
      out.write("	 			var verticalSize = endTime - startTime;\r\n");
      out.write("	 			var x = 0;\r\n");
      out.write("	 			\r\n");
      out.write("	 		if (schedules[i].substring(0, 1) == \"월\") {\r\n");
      out.write("	 			x = 50;\r\n");
      out.write("	 		}\r\n");
      out.write("	 		if (schedules[i].substring(0, 1) == \"화\") {\r\n");
      out.write("				x = 50 + 91;\r\n");
      out.write("			}\r\n");
      out.write("			if (schedules[i].substring(0, 1) == \"수\") {\r\n");
      out.write("				x = 50 + 91 + 91;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (schedules[i].substring(0, 1) == \"목\") {\r\n");
      out.write("				x = 50 + 91 + 91 + 91;\r\n");
      out.write("			}\r\n");
      out.write("			if (schedules[i].substring(0, 1) == \"금\") {\r\n");
      out.write("				x = 50 + 91 + 91 + 91 + 91;\r\n");
      out.write("			}\r\n");
      out.write("				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);\r\n");
      out.write("	     }\r\n");
      out.write("	     \r\n");
      out.write("	    },\r\n");
      out.write("	    //마우스 in 끝//\r\n");
      out.write("	    //마우스 out//\r\n");
      out.write("	    onCellMouseOut :function(params){\r\n");
      out.write("	    	outlinegridCtx.clearRect(0, 0, 600, 744);\r\n");
      out.write("	    },\r\n");
      out.write("	  //마우스 out 끝//\r\n");
      out.write("	    \r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("	    //마우스 더블클릭시//\r\n");
      out.write("	    onCellDoubleClicked : function(params){\r\n");
      out.write("	    	\r\n");
      out.write("	    	var selectedCredit = parseInt(params.data.credit);\r\n");
      out.write("	    	\r\n");
      out.write("	    	var maxC = parseInt($('#maxCredit').text());\r\n");
      out.write("	    \r\n");
      out.write("	    	var curC = -1;\r\n");
      out.write("	    	if ($('#curCredit').text() === null) {\r\n");
      out.write("	    		curC = 0;\r\n");
      out.write("			}else{\r\n");
      out.write("				curC = parseInt($('#curCredit').text());\r\n");
      out.write("			}\r\n");
      out.write("	    	\r\n");
      out.write("	    	console.log(\"선택한\",selectedCredit);\r\n");
      out.write("	    	console.log(\"현재\",curC);\r\n");
      out.write("	    	console.log(\"최대\",maxC);\r\n");
      out.write("	    	\r\n");
      out.write("	    	\r\n");
      out.write("	    	\r\n");
      out.write("	    	\r\n");
      out.write("	    	 var isExistInAppliedList = false;\r\n");
      out.write("		     var lecCd = params.data.lecCd;\r\n");
      out.write("		     var hiddenLecCd = document.querySelectorAll(\"td[style='display:none']\");\r\n");
      out.write("		     \r\n");
      out.write("		     if (hiddenLecCd.length > 0) {\r\n");
      out.write("		    	 console.log(\"0개 이상\");\r\n");
      out.write("	    	 	for (var q = 0; q < hiddenLecCd.length; q++) {\r\n");
      out.write("		     		if (lecCd == hiddenLecCd[q].innerHTML) {\r\n");
      out.write("		     			isExistInAppliedList=true;\r\n");
      out.write("	     		 	}					\r\n");
      out.write("				}\r\n");
      out.write("			 }\r\n");
      out.write("		     \r\n");
      out.write("	    	if (isExistInAppliedList) {\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		Swal.fire({\r\n");
      out.write("	    	        title: '이미 신청한 강의입니다. 철회하시겠습니까?',\r\n");
      out.write("	    	        showDenyButton: true,\r\n");
      out.write("	    	        confirmButtonText: '네',\r\n");
      out.write("	    	        denyButtonText: '아니오',\r\n");
      out.write("	    	      }).then((result) => {\r\n");
      out.write("	    	        if (result.isConfirmed) {\r\n");
      out.write("	    	        	withdrwalLecture(params.data.lecCd);\r\n");
      out.write("	    	               }else{\r\n");
      out.write("	    	            	   Swal.fire('철회하지 않았습니다.') \r\n");
      out.write("	    	               }\r\n");
      out.write("	    	            });\r\n");
      out.write("	    		\r\n");
      out.write("	    		\r\n");
      out.write("	    		return;\r\n");
      out.write("			}\r\n");
      out.write("	    	\r\n");
      out.write("	    	if (selectedCredit + curC > maxC) {\r\n");
      out.write("	    		Swal.fire(\r\n");
      out.write("	    				  '신청가능학점초과!',\r\n");
      out.write("	    				  '',\r\n");
      out.write("	    				  'error'\r\n");
      out.write("	    				)\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("	    	\r\n");
      out.write("	    	\r\n");
      out.write("	    	 var firstSchdule = params.data.lecDate1;\r\n");
      out.write("		     var secondSchdule = params.data.lecDate2;\r\n");
      out.write("		     var schedules = [];\r\n");
      out.write("		     schedules.push(firstSchdule);\r\n");
      out.write("		     if(secondSchdule){\r\n");
      out.write("		    	 schedules.push(secondSchdule);\r\n");
      out.write("		     }\r\n");
      out.write("		     \r\n");
      out.write(" 			 \r\n");
      out.write(" 			 \r\n");
      out.write("		     //같은 시간대 중복검사\r\n");
      out.write("		     for (var i = 0; i < schedules.length; i++) {\r\n");
      out.write("		    	 var startTime = parseInt(schedules[i].substring(2, 4));\r\n");
      out.write("	 			 var endTime = parseInt(schedules[i].substring(10, 12));\r\n");
      out.write("	 			 var x = 0;\r\n");
      out.write("	 			 var y = 50 + (70 * (startTime - 9));\r\n");
      out.write("	 			 var verticalSize = endTime - startTime;\r\n");
      out.write("	 			 \r\n");
      out.write("		 		if (schedules[i].substring(0, 1) == \"월\") {\r\n");
      out.write("		 			x = 50;\r\n");
      out.write("		 		}\r\n");
      out.write("		 		\r\n");
      out.write("		 		if (schedules[i].substring(0, 1) == \"화\") {\r\n");
      out.write("					x = 50 + 91;\r\n");
      out.write("				}\r\n");
      out.write("				if (schedules[i].substring(0, 1) == \"수\") {\r\n");
      out.write("					x = 50 + 91 + 91;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				if (schedules[i].substring(0, 1) == \"목\") {\r\n");
      out.write("					x = 50 + 91 + 91 + 91;\r\n");
      out.write("				}\r\n");
      out.write("				if(schedules[i].substring(0, 1) == \"금\") {\r\n");
      out.write("					x = 50 + 91 + 91 + 91 + 91;\r\n");
      out.write("	    	 	}\r\n");
      out.write("					var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);\r\n");
      out.write("					for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){\r\n");
      out.write("						Swal.fire(\r\n");
      out.write("			    				  '이미 신청한 시간대입니다!',\r\n");
      out.write("			    				  '',\r\n");
      out.write("			    				  'error'\r\n");
      out.write("			    				)\r\n");
      out.write("						return;}}\r\n");
      out.write("					if (verticalSize == 2) {\r\n");
      out.write("					var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);\r\n");
      out.write("					for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){\r\n");
      out.write("						Swal.fire(\r\n");
      out.write("			    				  '이미 신청한 시간대입니다!',\r\n");
      out.write("			    				  '',\r\n");
      out.write("			    				  'error'\r\n");
      out.write("			    				)\r\n");
      out.write("						return;}}\r\n");
      out.write("					}			\r\n");
      out.write("				\r\n");
      out.write("				}//for end\r\n");
      out.write("	    	\r\n");
      out.write("				//인원수 검사\r\n");
      out.write("		     if(params.data.stuNum >= params.data.maxStuNum) {\r\n");
      out.write("		    	 Swal.fire(\r\n");
      out.write("	    				  '최대 인원수 초과!',\r\n");
      out.write("	    				  '',\r\n");
      out.write("	    				  'error'\r\n");
      out.write("	    				)\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("	    	\r\n");
      out.write("			 //insert\r\n");
      out.write("		     $.ajax({\r\n");
      out.write("	             type:\"put\",  \r\n");
      out.write("	             url:\"");
      out.print(request.getContextPath());
      out.write("/stu/lec/apply?lecCd=\" + params.data.lecCd,\r\n");
      out.write("		          	 contentType : \"application/json; charset=utf-8\", \r\n");
      out.write("		             success:(rslt)=>{\r\n");
      out.write("		            	 \r\n");
      out.write("		            	 getAppliedListfn();\r\n");
      out.write("		            	 getCredits();\r\n");
      out.write("		             },\r\n");
      out.write("		             error:(request,status,error)=>{\r\n");
      out.write("// 		                alert(\"insert\"+\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("		             }\r\n");
      out.write("		          });\r\n");
      out.write("	    }//더블클릭 끝\r\n");
      out.write("	    \r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("        const gridDiv = document.querySelector('#myGrid');\r\n");
      out.write("        new agGrid.Grid(gridDiv, gridOptions);\r\n");
      out.write("        \r\n");
      out.write("        var webSocket = new WebSocket(\"ws://192.168.141.22/");
      out.print(request.getContextPath());
      out.write("/ws-lectureApply\");\r\n");
      out.write("    	\r\n");
      out.write("    	webSocket.onmessage = function(e){\r\n");
      out.write("    		\r\n");
      out.write("    		var splitData = e.data.split(\":\");\r\n");
      out.write("    		var lecId = splitData[0];\r\n");
      out.write("    		var applicatns = splitData[1];\r\n");
      out.write("    		var rowNode = gridOptions.api.getRowNode(lecId);\r\n");
      out.write("    		rowNode.setDataValue('stuNum', applicatns);\r\n");
      out.write("\r\n");
      out.write("    	}\r\n");
      out.write("\r\n");
      out.write("    }r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var appliedDIV = document.querySelector('#appliedDIV');\r\n");
      out.write("function getAppliedListfn(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		url:\"");
      out.print(request.getContextPath());
      out.write("/stu/lec/getAppliedLecList\",\r\n");
      out.write("		dataType:\"json\", \r\n");
      out.write("		success:(rslt)=>{\r\n");
      out.write("			\r\n");
      out.write("			var vtblStr = \"<table class='table table-hover'>\";\r\n");
      out.write("			vtblStr += \"<tr><th>과목명</th><th>학점</th><th>교수명</th></tr>\";\r\n");
      out.write("		    //배열 데이터 반복\r\n");
      out.write("			for(var i=0; i<rslt.length; i++){\r\n");
      out.write("				vtblStr += \"<tr class='appliedLists'>\";\r\n");
      out.write("				vtblStr += `<td style=\"display:none\">${rslt[i].lecCd}</td>`;\r\n");
      out.write("				vtblStr += `<td>${rslt[i].subjName}</td>`;					\r\n");
      out.write("				vtblStr += `<td>${rslt[i].credit}</td>`;					\r\n");
      out.write("				vtblStr += `<td>${rslt[i].profName}</td>`;					\r\n");
      out.write("				vtblStr += \"</tr>\";\r\n");
      out.write("			}		\r\n");
      out.write("		    vtblStr += \"</table>\";\r\n");
      out.write("		    appliedDIV.innerHTML = vtblStr;	\r\n");
      out.write("			//시퀀스상 테이블 tr에 이벤트를 주려면 테이블이 만들어진 후에\r\n");
      out.write("			\r\n");
      out.write("			gridCtx.clearRect(0, 0, 600, 744);\r\n");
      out.write("			drawGrid();\r\n");
      out.write("			var colorArr = ['#ffafb0','#fcffb0','#aee4ff','#b5c7ed','#fcc6f7','#bee9b4','#ffe4af','#A9A0FC','#8AV481'];\r\n");
      out.write("			//시간표 그려줌\r\n");
      out.write("			for (var i = 0; i < rslt.length; i++) {\r\n");
      out.write("					var subjName = rslt[i].subjName;\r\n");
      out.write("					gridCtx.font =\"10pt Fira\";\r\n");
      out.write("		 			gridCtx.fillStyle = colorArr[i];\r\n");
      out.write("				\r\n");
      out.write("				 var schedules = []\r\n");
      out.write("			     schedules.push(rslt[i].lecDate1)\r\n");
      out.write("			     if(rslt[i].lecDate2){\r\n");
      out.write("			    	 schedules.push(rslt[i].lecDate2)\r\n");
      out.write("			     }\r\n");
      out.write("				\r\n");
      out.write("				for (var j = 0; j < schedules.length; j++) {\r\n");
      out.write("					\r\n");
      out.write("					var startTime = parseInt(schedules[j].substring(2, 4));\r\n");
      out.write("		 			var endTime = parseInt(schedules[j].substring(10, 12));\r\n");
      out.write("			 		var y = 50 + (70 * (startTime - 9));\r\n");
      out.write("		 			var verticalSize = endTime - startTime;\r\n");
      out.write("		 			var x = 0;\r\n");
      out.write("					\r\n");
      out.write("					if (schedules[j].substring(0, 1) == \"월\") {\r\n");
      out.write("			 			x = 50;\r\n");
      out.write("			 		}\r\n");
      out.write("			 		if (schedules[j].substring(0, 1) == \"화\") {\r\n");
      out.write("						x = 50 + 91;\r\n");
      out.write("					}\r\n");
      out.write("					if (schedules[j].substring(0, 1) == \"수\") {\r\n");
      out.write("						x = 50 + 91 + 91;\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("					if (schedules[j].substring(0, 1) == \"목\") {\r\n");
      out.write("						x = 50 + 91 + 91 + 91;\r\n");
      out.write("					}\r\n");
      out.write("					if (schedules[j].substring(0, 1) == \"금\") {\r\n");
      out.write("						x = 50 + 91 + 91 + 91 + 91;\r\n");
      out.write("					}\r\n");
      out.write("					gridCtx.fillRect(x, y, 91, 70 * verticalSize);\r\n");
      out.write("		 			gridCtx.strokeText(subjName.substr(0,5), x+20, y+20);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		$(\".appliedLists\").dblclick(function(e){\r\n");
      out.write("		 		if (confirm(\"취소하시겠습니까?\")) {\r\n");
      out.write("		 			withdrwalLecture(e.currentTarget.childNodes[0].innerHTML);\r\n");
      out.write("		 			getCredits();\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		},\r\n");
      out.write("		error:(request,status,error)=>{\r\n");
      out.write("			\r\n");
      out.write("// 			alert(\"getAppliedListfn\"+\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function withdrwalLecture(lecCdOne){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("	       type:\"delete\",  \r\n");
      out.write("	       url:\"");
      out.print(request.getContextPath());
      out.write("/stu/lec/withdrwal?lecCd=\" + lecCdOne,\r\n");
      out.write("	           success:(rslt)=>{\r\n");
      out.write("	          	 getAppliedListfn();\r\n");
      out.write("	          	 getCredits();\r\n");
      out.write("	           },\r\n");
      out.write("	           error:(request,status,error)=>{\r\n");
      out.write("// 	              alert(\"withdrwalLecture\"+\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("	           }\r\n");
      out.write("	        });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getCredits(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("        url:\"");
      out.print(request.getContextPath());
      out.write("/stu/lec/getCredits\",\r\n");
      out.write("     	contentType : \"application/json; charset=utf-8\", \r\n");
      out.write("     	success:(rlst)=>{\r\n");
      out.write("     		var currentCredit = 0;\r\n");
      out.write("     		if (rlst.curentCredit == null) {\r\n");
      out.write("     			currentCredit = 0;\r\n");
      out.write("			}else{\r\n");
      out.write("				currentCredit = rlst.curentCredit;\r\n");
      out.write("			}\r\n");
      out.write("     		\r\n");
      out.write("     		$('#maxCredit').text(rlst.MaxCredit);\r\n");
      out.write("     		$('#curCredit').text(currentCredit);\r\n");
      out.write("     	},\r\n");
      out.write("     	error:(request,status,error)=>{\r\n");
      out.write("     		\r\n");
      out.write("//             alert(\"getCredits\"+\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("         }\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("$(function(){\r\n");
      out.write("	getAppliedListfn();\r\n");
      out.write("	getCredits();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
