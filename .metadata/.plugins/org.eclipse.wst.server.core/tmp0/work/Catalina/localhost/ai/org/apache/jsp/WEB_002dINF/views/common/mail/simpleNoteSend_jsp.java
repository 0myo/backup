/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-11-25 11:40:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common.mail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class simpleNoteSend_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662347357502L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h3 class=\"card-header\"><i class=\"fas fa-envelope\"></i>&nbsp;&nbsp;쪽지 보내기</h3>\r\n");
      out.write("			<form id=\"form\" method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${webPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/common/sendSimpleNote\">\r\n");
      out.write("   				<div class=\"card-body\">\r\n");
      out.write("					\r\n");
      out.write("					<div class=\"to\">\r\n");
      out.write("						<div class=\"form-group row pt-0\" >\r\n");
      out.write("							<label class=\"col-md-1 control-label\" ><strong>&nbsp;&nbsp;받는사람</strong></label>\r\n");
      out.write("	\r\n");
      out.write("					<div class=\"col-md-6\">\r\n");
      out.write("						<input class=\"form-control\" type=\"text\" id=\"receiverId\" name=\"receiverId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${receiverId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("					</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("			<div class=\"subject\">\r\n");
      out.write("				<div class=\"form-group row pt-2\">\r\n");
      out.write("					<label class=\"col-md-1 control-label\"><strong>&nbsp;&nbsp;제 목</strong></label>\r\n");
      out.write("						<div class=\"col-md-6\">\r\n");
      out.write("							<input class=\"form-control\" type=\"text\" id=\"title\" name=\"title\">\r\n");
      out.write("						</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("						<br>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"email editor\">\r\n");
      out.write("			<div class=\"col-md-12 p-0\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<label class=\"control-label sr-only\" for=\"summernote\">Descriptions </label>\r\n");
      out.write("						<textarea class=\"textarea\" id=\"content\" name=\"content\" rows=\"20\"\r\n");
      out.write("							placeholder=\"1000자 내외로 작성하세요.\" style=\"display: none;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myAssignSub.subContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </textarea>\r\n");
      out.write("						<div id=\"summernote\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("			<div class=\"form-group col-md-12\" align=\"right\">\r\n");
      out.write("				<button onclick=\"subMessage()\" type=\"button\" class=\"btn btn-primary float-right\">전송</button>\r\n");
      out.write("				<button onclick=\"CloseWindow();\"type=\"button\" class=\"btn btn-secondary btn-space\"><i class=\"icon s7-close\"></i>취소</button>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("			</form>	\r\n");
      out.write("			</div>\r\n");
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("   function goBack(){\r\n");
      out.write("      window.history.back();\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("window.onload=function(){\r\n");
      out.write("  summernote($('#content'),'");
      out.print(request.getContextPath());
      out.write("');	\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function summernote(target,context){\r\n");
      out.write("	\r\n");
      out.write("	contextPath = context;\r\n");
      out.write("	\r\n");
      out.write("	target.summernote({\r\n");
      out.write("		placeholder:'여기에 내용을 적으세요.',\r\n");
      out.write("		lang:'ko-KR',\r\n");
      out.write("		height:200,\r\n");
      out.write("\r\n");
      out.write("		disableResizeEditor: true,\r\n");
      out.write("		callbacks:{\r\n");
      out.write("			onImageUpload : function(files, editor, welEditable) {\r\n");
      out.write("				for(var file of files){\r\n");
      out.write("					//alert(file.name);\r\n");
      out.write("					\r\n");
      out.write("					if(file.name.substring(file.name.lastIndexOf(\".\")+1).toUpperCase() != \"JPG\"){\r\n");
      out.write("						alert(\"JPG 이미지형식만 가능합니다.\");\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					if(file.size > 1024*1024*5){\r\n");
      out.write("						alert(\"이미지는 5MB 미만입니다.\");\r\n");
      out.write("						return;\r\n");
      out.write("					}	\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				for (var file of files) {\r\n");
      out.write("					sendFile(file,this);\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			onMediaDelete : function(target) {\r\n");
      out.write("				deleteFile(target[0].src);	\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function subMessage(){\r\n");
      out.write("	 \r\n");
      out.write("	\r\n");
      out.write("	Swal.fire({\r\n");
      out.write("		  title: '쪽지를 보내시겠습니까?',\r\n");
      out.write("		  text: \"\",\r\n");
      out.write("		  icon: 'warning',\r\n");
      out.write("		  showDenyButton: true,\r\n");
      out.write("		  confirmButtonColor: '#3085d6',\r\n");
      out.write("		  cancelButtonColor: '#d33',\r\n");
      out.write("		  confirmButtonText: '확인',\r\n");
      out.write("		  denyButtonText:'취소',\r\n");
      out.write("		}).then((result) => {\r\n");
      out.write("		  if (result.isConfirmed) {\r\n");
      out.write("		   \r\n");
      out.write("			  var form = $('#form');\r\n");
      out.write("				 form.attr(\"action\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${webPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/common/sendSimpleNote\");\r\n");
      out.write("				 form.attr(\"method\",\"POST\");\r\n");
      out.write("				 form.submit();\r\n");
      out.write("		  }\r\n");
      out.write("		})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/common/mail/simpleNoteSend.jsp(68,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${from eq 'regist'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("<script>\r\n");
          out.write("$(function(){\r\n");
          out.write("	Swal.fire(\r\n");
          out.write("			  '쪽지를 성공적으로 보냈습니다.',\r\n");
          out.write("			  '',\r\n");
          out.write("			  'success'\r\n");
          out.write("			).then(()=>{\r\n");
          out.write("				\r\n");
          out.write("	CloseWindow();\r\n");
          out.write("			});\r\n");
          out.write("});\r\n");
          out.write("	\r\n");
          out.write("</script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
