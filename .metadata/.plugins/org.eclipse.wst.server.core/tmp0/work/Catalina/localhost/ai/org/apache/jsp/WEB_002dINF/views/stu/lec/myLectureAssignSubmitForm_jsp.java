/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-11-27 03:54:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.stu.lec;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myLectureAssignSubmitForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662347357502L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".drop-zone {\r\n");
      out.write("    width: 500px;\r\n");
      out.write("    height: 300px;\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    position:relative;\r\n");
      out.write("    padding : 50px;\r\n");
      out.write("   	border-radius: 15px;\r\n");
      out.write("   	border : 3px dashed #71748d;\r\n");
      out.write("   	font-size:15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fileUpload{\r\n");
      out.write("	position:absolute;\r\n");
      out.write("	top : 400px;\r\n");
      out.write("	right : 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".drop-zone-dragenter, .drop-zone-dragover {\r\n");
      out.write("	background-color: #dbdbe7;\r\n");
      out.write("/*     border: 3px solid pink; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title{\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 30px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("	<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n");
      out.write("		<div class=\"card\">\r\n");
      out.write("			<div class=\"card-header\">\r\n");
      out.write("				<div class=\"title\">과제 제출 또는 수정하기</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"card-body\">\r\n");
      out.write("				<form>\r\n");
      out.write("					<div class=\"row flex justify-content-center\">\r\n");
      out.write("						<textarea style=\"display: inline\"\r\n");
      out.write("							class=\"form-control col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\"\r\n");
      out.write("							id=\"content\" rows=\"3\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myAssignSub.subContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </textarea>\r\n");
      out.write("						<div>\r\n");
      out.write("							<div class=\"drop-zone \">\r\n");
      out.write("								<br />\r\n");
      out.write("								<div style=\"text-align: center; font-size: 50px;\">\r\n");
      out.write("									<i class=\"fas fa-upload\"></i>\r\n");
      out.write("								</div>\r\n");
      out.write("									<div\r\n");
      out.write("										style=\"text-align: center; font-size: 20px; font-weight: bold;\">\r\n");
      out.write("										파일 선택 클릭<br />또는 파일을 여기로 드래그하세요.\r\n");
      out.write("									</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("								</div>\r\n");
      out.write("							<input type=\"file\" id=\"fileUpload\" multiple> <br> <br>\r\n");
      out.write("							 ");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(71,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty myAssignSub.attachList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				       	 	 <div class=\"justify-content-end d-flex col-md-12 col-sm-12 col-xs-12\">\r\n");
            out.write("					       	 	 <div class=\"col-md-12 col-sm-12 col-xs-12\" id=\"submitAttachList\" style=\"border : 3px dashed gray; width: 500px; border-radius: 15px;\">\r\n");
            out.write("					       	 			<div class=\"d-flex justify-content-end\">\r\n");
            out.write("											 <h3>이전에 제출한 과제 파일 다운로드</h3>\r\n");
            out.write("										</div>\r\n");
            out.write("										 ");
            //  c:forEach
            org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
            boolean _jspx_th_c_005fforEach_005f0_reused = false;
            try {
              _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
              // /WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(77,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
              _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(77,11) '${myAssignSub.attachList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${myAssignSub.attachList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
              // /WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(77,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fforEach_005f0.setVar("attach");
              int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
              try {
                int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
                if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                  do {
                    out.write("\r\n");
                    out.write("													<div class=\"col-md-12 col-sm-4 col-xs-12 d-flex justify-content-end row\" >\r\n");
                    out.write("															\r\n");
                    out.write("															<span data-ano=\"");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("\" class=\"info-box-icon bg-yellow\">\r\n");
                    out.write("																<i  class=\"fa fa-copy\"></i>\r\n");
                    out.write("															</span>\r\n");
                    out.write("															<span data-ano=\"");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("\" class =\"info-box-text\">\r\n");
                    out.write("																");
                    if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
                      return;
                    out.write("&nbsp;&nbsp;	\r\n");
                    out.write("															</span>\r\n");
                    out.write("															<span style=\"cursor:pointer;\" data-ano=\"");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("\" onclick=\"location.href='");
                    out.print(request.getContextPath());
                    out.write("/getFile?anoCd=");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("&anoSeq=");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write('\'');
                    out.write('"');
                    out.write('>');
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.filename }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("</span>\r\n");
                    out.write("															<span style=\"cursor:pointer;\" data-ano=\"");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write("\" onclick=\"removeFile(");
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write(',');
                    out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attach.anoSeq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                    out.write(");\">&nbsp;&nbsp;&nbsp;&nbsp;<i class=\"fas fa-times\" style=\"color : red;\"></i></span>\r\n");
                    out.write("										</div>\r\n");
                    out.write("										");
                    int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
                    if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                      break;
                  } while (true);
                }
                if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                  return;
                }
              } catch (java.lang.Throwable _jspx_exception) {
                while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
                  out = _jspx_page_context.popBody();
                _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
              } finally {
                _jspx_th_c_005fforEach_005f0.doFinally();
              }
              _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
              _jspx_th_c_005fforEach_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
            }
            out.write("\r\n");
            out.write("									 </div>\r\n");
            out.write("								</div>\r\n");
            out.write("							 ");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("	\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("				<div class=\"row justify-content-end mt-3 mr-4\">\r\n");
      out.write("			<!-- 					<button class=\"btn btn-info\" type=\"button\" onclick=\"\">	</button>&nbsp; -->\r\n");
      out.write("			<!-- 					<button class=\"btn btn-secondary\" type=\"button\" onclick=\"\">삭제</button>&nbsp; -->\r\n");
      out.write("			<!-- 					<button class=\"btn btn-primary\" type=\"button\" onclick=\"\">목록</button>&nbsp; -->\r\n");
      out.write("			<!-- 					<br> -->\r\n");
      out.write("			<button class=\"btn btn-outline-primary m-1\" type=\"button\"\r\n");
      out.write("				onclick=\"assignSubmit()\">과제제출하기/수정하기</button>\r\n");
      out.write("			<button class=\"btn btn-outline-secondary m-1\" type=\"button\"\r\n");
      out.write("				onclick=\"CloseWindow()\">목록으로 돌아가기</button>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("		<input type=\"hidden\" id=\"assBno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${assBno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		<input type=\"hidden\" id=\"lecCd\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lecCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("window.onload=function(){\r\n");
      out.write("  summernote($('#content'),'");
      out.print(request.getContextPath());
      out.write("');	\r\n");
      out.write("\r\n");
      out.write(" }\r\n");
      out.write("	 \r\n");
      out.write("\r\n");
      out.write("function summernote(target,context){\r\n");
      out.write("	\r\n");
      out.write("	contextPath = context;\r\n");
      out.write("	\r\n");
      out.write("	target.summernote({\r\n");
      out.write("\r\n");
      out.write("		toolbar: [\r\n");
      out.write("		    // [groupName, [list of button]]\r\n");
      out.write("		    ['fontname', ['fontname']],\r\n");
      out.write("		    ['fontsize', ['fontsize']],\r\n");
      out.write("		    ['style', ['bold', 'italic', 'underline','strikethrough', 'clear']],\r\n");
      out.write("		    ['color', ['forecolor','color']],\r\n");
      out.write("		    ['table', ['table']],\r\n");
      out.write("		    ['para', ['ul', 'ol', 'paragraph']],\r\n");
      out.write("		    ['height', ['height']],\r\n");
      out.write("		    ['insert',['picture','link','video']],\r\n");
      out.write("		    ['view', ['fullscreen', 'help']]\r\n");
      out.write("		  ],\r\n");
      out.write("		fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New','맑은 고딕','궁서','굴림체','굴림','돋움체','바탕체'],\r\n");
      out.write("		fontSizes: ['8','9','10','11','12','14','16','18','20','22','24','28','30','36','50','72'],\r\n");
      out.write("		placeholder:'여기에 내용을 적으세요.',\r\n");
      out.write("		lang:'ko-KR',\r\n");
      out.write("		height:500,\r\n");
      out.write("		width:850,\r\n");
      out.write("		disableResizeEditor: true,\r\n");
      out.write("		callbacks:{\r\n");
      out.write("			onImageUpload : function(files, editor, welEditable) {\r\n");
      out.write("				for(var file of files){\r\n");
      out.write("					//alert(file.name);\r\n");
      out.write("					\r\n");
      out.write("					if(file.name.substring(file.name.lastIndexOf(\".\")+1).toUpperCase() != \"JPG\"){\r\n");
      out.write("						Swal.fire({\r\n");
      out.write("							  icon: 'error',\r\n");
      out.write("							  title: 'JPG 이미지형식만 가능합니다.',\r\n");
      out.write("							})\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					if(file.size > 1024*1024*5){\r\n");
      out.write("						Swal.fire({\r\n");
      out.write("							  icon: 'error',\r\n");
      out.write("							  title: '이미지는 5MB 미만입니다.',\r\n");
      out.write("							})\r\n");
      out.write("						return;\r\n");
      out.write("					}	\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				for (var file of files) {\r\n");
      out.write("					sendFile(file,this);\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			onMediaDelete : function(target) {\r\n");
      out.write("				deleteFile(target[0].src);	\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write(" \r\n");
      out.write("        (function() {\r\n");
      out.write("            \r\n");
      out.write("            var $file = document.getElementById(\"fileUpload\")\r\n");
      out.write("            var dropZone = document.querySelector(\".drop-zone\")\r\n");
      out.write("\r\n");
      out.write("            var toggleClass = function(className) {\r\n");
      out.write("                \r\n");
      out.write("                console.log(\"current event: \" + className)\r\n");
      out.write("\r\n");
      out.write("                var list = [\"dragenter\", \"dragleave\", \"dragover\", \"drop\"]\r\n");
      out.write("\r\n");
      out.write("                for (var i = 0; i < list.length; i++) {\r\n");
      out.write("                    if (className === list[i]) {\r\n");
      out.write("                        dropZone.classList.add(\"drop-zone-\" + list[i])\r\n");
      out.write("                    } else {\r\n");
      out.write("                        dropZone.classList.remove(\"drop-zone-\" + list[i])\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var showFiles = function(files) {\r\n");
      out.write("                dropZone.innerHTML = \"\"\r\n");
      out.write("                if(files.length == 0){\r\n");
      out.write("                	dropZone.innerHTML += `</br>\r\n");
      out.write("					 	<div style=\"text-align:center; font-size:50px;\"><i class=\"fas fa-upload\"></i></div>\r\n");
      out.write("			      		<div style=\"text-align:center; font-size:20px; font-weight:bold;\">파일 선택 클릭</br>또는 파일을 여기로 드래그하세요.</div>`;\r\n");
      out.write("                }\r\n");
      out.write("                for(var i = 0, len = files.length; i < len; i++) {\r\n");
      out.write("                    dropZone.innerHTML += \"<p><i class='fas fa-file'></i>&nbsp;&nbsp;\" + files[i].name + \"</p>\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var selectFile = function(files) {\r\n");
      out.write("                // input file 영역에 드랍된 파일들로 대체\r\n");
      out.write("                $file.files = files\r\n");
      out.write("                showFiles($file.files)\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $file.addEventListener(\"change\", function(e) {\r\n");
      out.write("                showFiles(e.target.files)\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 드래그한 파일이 최초로 진입했을 때\r\n");
      out.write("            dropZone.addEventListener(\"dragenter\", function(e) {\r\n");
      out.write("                e.stopPropagation()\r\n");
      out.write("                e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("                toggleClass(\"dragenter\")\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 드래그한 파일이 dropZone 영역을 벗어났을 때\r\n");
      out.write("            dropZone.addEventListener(\"dragleave\", function(e) {\r\n");
      out.write("                e.stopPropagation()\r\n");
      out.write("                e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("                toggleClass(\"dragleave\")\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 드래그한 파일이 dropZone 영역에 머물러 있을 때\r\n");
      out.write("            dropZone.addEventListener(\"dragover\", function(e) {\r\n");
      out.write("                e.stopPropagation()\r\n");
      out.write("                e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("                toggleClass(\"dragover\")\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 드래그한 파일이 드랍되었을 때\r\n");
      out.write("            dropZone.addEventListener(\"drop\", function(e) {\r\n");
      out.write("                e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("                toggleClass(\"drop\")\r\n");
      out.write("\r\n");
      out.write("                var files = e.dataTransfer && e.dataTransfer.files\r\n");
      out.write("                console.log(files)\r\n");
      out.write("\r\n");
      out.write("                if (files != null) {\r\n");
      out.write("                    if (files.length < 1) {\r\n");
      out.write("                        alert(\"폴더 업로드 불가\")\r\n");
      out.write("                        return\r\n");
      out.write("                    }\r\n");
      out.write("                    selectFile(files)\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(\"ERROR\")\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("        })();\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function removeFile(anoCd,anoSeq){\r\n");
      out.write("	\r\n");
      out.write("	Swal.fire({\r\n");
      out.write("        title: \"제출한 파일을 삭제하시겠습니까?\",\r\n");
      out.write("        text:\" 삭제한 파일은 되돌릴 수 없습니다.\",\r\n");
      out.write("        showDenyButton: true,\r\n");
      out.write("        confirmButtonText: '네',\r\n");
      out.write("        denyButtonText: '아니오',\r\n");
      out.write("      }).then((result) => {\r\n");
      out.write("        if (result.isConfirmed) {\r\n");
      out.write("           \r\n");
      out.write("        \r\n");
      out.write("	\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${webPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stu/lec/mylecture/assign/delete',\r\n");
      out.write("			type:\"post\",\r\n");
      out.write("			data:{\r\n");
      out.write("				anoCd:anoCd,\r\n");
      out.write("				anoSeq:anoSeq\r\n");
      out.write("			},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				$('span[data-ano='+anoCd+anoSeq+']').remove();\r\n");
      out.write("			},\r\n");
      out.write("			error:function(){\r\n");
      out.write("// 				alert('파일 삭제에 실패하였습니다. 관리자에게 문의하세요.');\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("} \r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function assignSubmit(){\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("	Swal.fire({\r\n");
      out.write("        title: '제출하시겠습니까?',\r\n");
      out.write("        showDenyButton: true,\r\n");
      out.write("        confirmButtonText: '네',\r\n");
      out.write("        denyButtonText: '아니오',\r\n");
      out.write("      }).then((result) => {\r\n");
      out.write("        if (result.isConfirmed) {\r\n");
      out.write("           \r\n");
      out.write("        \r\n");
      out.write("             \r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	var formData = new FormData();\r\n");
      out.write("	var content = $(\"#content\").val();\r\n");
      out.write("	var assBno = $(\"#assBno\").val();\r\n");
      out.write("	var lecCd=$(\"#lecCd\").val();\r\n");
      out.write("	var uploadFile =$('#fileUpload');\r\n");
      out.write("	\r\n");
      out.write("	formData.append(\"subContent\",content);\r\n");
      out.write("	formData.append(\"assBno\",assBno);\r\n");
      out.write("	formData.append(\"lecCd\",lecCd);\r\n");
      out.write("	for(var i=0;i<uploadFile[0].files.length;i++){\r\n");
      out.write("		formData.append(\"uploadFile\",uploadFile[0].files[i]);\r\n");
      out.write("	}\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"");
      out.print(request.getContextPath());
      out.write("/stu/lec/mylecture/assign/regist\",\r\n");
      out.write("		method:\"post\",\r\n");
      out.write("		contentType : false,\r\n");
      out.write("		processData : false,\r\n");
      out.write("		data:formData,\r\n");
      out.write("		dataType:\"json\",\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			Swal.fire(\r\n");
      out.write("					  '성공적으로 과제를 제출하였습니다!',\r\n");
      out.write("					  '',\r\n");
      out.write("					  'success'\r\n");
      out.write("					).then(()=>{\r\n");
      out.write("						location.reload();\r\n");
      out.write("					});\r\n");
      out.write("		},error:function(){\r\n");
      out.write("// 			alert(\"실패\");\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("        }\r\n");
      out.write("      });	\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(84,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myAssignSub.submitDate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/stu/lec/myLectureAssignSubmitForm.jsp(84,16) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy/MM/dd");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
