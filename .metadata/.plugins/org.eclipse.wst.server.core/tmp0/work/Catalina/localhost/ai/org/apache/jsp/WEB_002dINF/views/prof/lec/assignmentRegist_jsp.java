/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-11-27 04:03:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.prof.lec;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class assignmentRegist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662347357502L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".tui-datepicker {\r\n");
      out.write("	z-index: 999;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".drop-zone {\r\n");
      out.write("    width: 500px;\r\n");
      out.write("    height: 250px;\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    position:relative;\r\n");
      out.write("    padding : 50px;\r\n");
      out.write("   	border-radius: 15px;\r\n");
      out.write("   	border : 3px dashed #71748d;\r\n");
      out.write("   	font-size:15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fileUpload{\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".drop-zone-dragenter, .drop-zone-dragover {\r\n");
      out.write("	background-color: #dbdbe7;\r\n");
      out.write("/*     border: 3px solid pink; */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://uicdn.toast.com/tui.time-picker/latest/tui-time-picker.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://uicdn.toast.com/tui.date-picker/latest/tui-date-picker.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- 게시판상세 -->\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<!-- MAIN-CONTENT -->\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("	<!-- 111111 -->\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\r\n");
      out.write("			<div class=\"card\">\r\n");
      out.write("				<h2 class=\"card-header\">과제 등록하기</h2>\r\n");
      out.write("				\r\n");
      out.write("\r\n");
      out.write("					<div class=\"card-body\">\r\n");
      out.write("					<form role=\"form\" method=\"post\"action=\"");
      out.print(request.getContextPath() );
      out.write("/prof/lec/assignment/regist\"name=\"registForm\">\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<table class=\"table table-bordered\">\r\n");
      out.write("								<tbody>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th>제목</th>\r\n");
      out.write("										\r\n");
      out.write("										<td class=\"table-title\"><input class=\"form-control\"\r\n");
      out.write("											id=\"title\" name=\"title\" type=\"text\" style=\"width:100%\"/>\r\n");
      out.write("											</td>\r\n");
      out.write("										<th>시작날짜</th>\r\n");
      out.write("										<td class=\"table-title\">\r\n");
      out.write("											<div\r\n");
      out.write("												class=\"tui-datepicker-input tui-datetime-input tui-has-focus\">\r\n");
      out.write("												<input type=\"text\" id=\"datepicker-input\" name=\"createDate\" aria-label=\"Date-Time\"> <span class=\"tui-ico-date\"></span>\r\n");
      out.write("											</div>\r\n");
      out.write("											<div id=\"wrapper\" style=\"margin-top: -1px;\"></div>\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th>점수비율</th>\r\n");
      out.write("										<td class=\"table-title\"><input type=\"number\" name=\"evalRate\" style=\"width:100%\"/></td>\r\n");
      out.write("										<th>마감날짜</th>\r\n");
      out.write("										<td class=\"table-title\">\r\n");
      out.write("											<div\r\n");
      out.write("												class=\"tui-datepicker-input tui-datetime-input tui-has-focus\">\r\n");
      out.write("												<input type=\"text\" id=\"datepicker-input-1\" name=\"dueDate\"\r\n");
      out.write("													aria-label=\"Date-Time\"> <span class=\"tui-ico-date\"></span>\r\n");
      out.write("											</div>\r\n");
      out.write("											<div id=\"wrapper-1\" style=\"margin-top: -1px;\"></div>\r\n");
      out.write("\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("\r\n");
      out.write("								</tbody>\r\n");
      out.write("							</table>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"row\">\r\n");
      out.write("							<div class=\"col-xl-8\">\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label for=\"content\"></label>\r\n");
      out.write("									<textarea class=\"textarea\" name=\"content\" id=\"content\"\r\n");
      out.write("										rows=\"20\" placeholder=\"1000자 내외로 작성하세요.\"\r\n");
      out.write("										style=\"display: none;\"></textarea>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-xl-4\">\r\n");
      out.write("								<div class=\"drop-zone \">\r\n");
      out.write("									<br />\r\n");
      out.write("									<div style=\"text-align: center; font-size: 50px;\">\r\n");
      out.write("										<i class=\"fas fa-upload\"></i>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div\r\n");
      out.write("										style=\"text-align: center; font-size: 20px; font-weight: bold;\">\r\n");
      out.write("										파일 선택 클릭<br />또는 파일을 여기로 드래그하세요.\r\n");
      out.write("									</div>\r\n");
      out.write("								\r\n");
      out.write("								</div>\r\n");
      out.write("										<input  style=\"padding-left:210px;\" type=\"file\" id=\"fileUpload\" multiple> <br> <br> 	\r\n");
      out.write("							</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<!-- ================================================= -->\r\n");
      out.write("					<!-- 버튼 시작 -->\r\n");
      out.write("					<!-- ================================================= -->\r\n");
      out.write("					<div class=\"row justify-content-end mt-3\">\r\n");
      out.write("						<!--                <button class=\"btn btn-info\" type=\"button\" onclick=\"\">수정</button>&nbsp; -->\r\n");
      out.write("						<!--                <button class=\"btn btn-secondary\" type=\"button\" onclick=\"\">삭제</button>&nbsp; -->\r\n");
      out.write("						<!--                <button class=\"btn btn-primary\" type=\"button\" onclick=\"\">목록</button>&nbsp; -->\r\n");
      out.write("						<!--                <br> -->\r\n");
      out.write("						<div class=\"col-xl-8\">\r\n");
      out.write("							<button class=\"btn btn-outline-primary\" type=\"button\"\r\n");
      out.write("								onclick=\"regist_go();\">등록</button>\r\n");
      out.write("							&nbsp;&nbsp;\r\n");
      out.write("							<button class=\"btn btn-outline-danger\" type=\"button\"\r\n");
      out.write("								onclick=\"f_alert();\">취소</button>\r\n");
      out.write("							&nbsp;&nbsp;\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- ================================================= -->\r\n");
      out.write("					<!-- 버튼 끝 -->\r\n");
      out.write("					<!-- ================================================= -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- 11111끝 -->\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("window.onload=function(){\r\n");
      out.write("	summernote_go($('#content'),'");
      out.print(request.getContextPath());
      out.write("'); \r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://uicdn.toast.com/tui.time-picker/latest/tui-time-picker.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://uicdn.toast.com/tui.date-picker/latest/tui-date-picker.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("(function() {\r\n");
      out.write("    \r\n");
      out.write("    var $file = document.getElementById(\"fileUpload\")\r\n");
      out.write("    var dropZone = document.querySelector(\".drop-zone\")\r\n");
      out.write("\r\n");
      out.write("    var toggleClass = function(className) {\r\n");
      out.write("        \r\n");
      out.write("        console.log(\"current event: \" + className)\r\n");
      out.write("\r\n");
      out.write("        var list = [\"dragenter\", \"dragleave\", \"dragover\", \"drop\"]\r\n");
      out.write("\r\n");
      out.write("        for (var i = 0; i < list.length; i++) {\r\n");
      out.write("            if (className === list[i]) {\r\n");
      out.write("                dropZone.classList.add(\"drop-zone-\" + list[i])\r\n");
      out.write("            } else {\r\n");
      out.write("                dropZone.classList.remove(\"drop-zone-\" + list[i])\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    var showFiles = function(files) {\r\n");
      out.write("        dropZone.innerHTML = \"\"\r\n");
      out.write("        if(files.length == 0){\r\n");
      out.write("        	dropZone.innerHTML += `</br>\r\n");
      out.write("			 	<div style=\"text-align:center; font-size:50px;\"><i class=\"fas fa-upload\"></i></div>\r\n");
      out.write("	      		<div style=\"text-align:center; font-size:20px; font-weight:bold;\">파일 선택 클릭</br>또는 파일을 여기로 드래그하세요.</div>`;\r\n");
      out.write("        }\r\n");
      out.write("        for(var i = 0, len = files.length; i < len; i++) {\r\n");
      out.write("            dropZone.innerHTML += \"<p><i class='fas fa-file'></i>&nbsp;&nbsp;\" + files[i].name + \"</p>\";\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    var selectFile = function(files) {\r\n");
      out.write("        // input file 영역에 드랍된 파일들로 대체\r\n");
      out.write("        $file.files = files\r\n");
      out.write("        showFiles($file.files)\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    $file.addEventListener(\"change\", function(e) {\r\n");
      out.write("        showFiles(e.target.files)\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 드래그한 파일이 최초로 진입했을 때\r\n");
      out.write("    dropZone.addEventListener(\"dragenter\", function(e) {\r\n");
      out.write("        e.stopPropagation()\r\n");
      out.write("        e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("        toggleClass(\"dragenter\")\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 드래그한 파일이 dropZone 영역을 벗어났을 때\r\n");
      out.write("    dropZone.addEventListener(\"dragleave\", function(e) {\r\n");
      out.write("        e.stopPropagation()\r\n");
      out.write("        e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("        toggleClass(\"dragleave\")\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 드래그한 파일이 dropZone 영역에 머물러 있을 때\r\n");
      out.write("    dropZone.addEventListener(\"dragover\", function(e) {\r\n");
      out.write("        e.stopPropagation()\r\n");
      out.write("        e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("        toggleClass(\"dragover\")\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 드래그한 파일이 드랍되었을 때\r\n");
      out.write("    dropZone.addEventListener(\"drop\", function(e) {\r\n");
      out.write("        e.preventDefault()\r\n");
      out.write("\r\n");
      out.write("        toggleClass(\"drop\")\r\n");
      out.write("\r\n");
      out.write("        var files = e.dataTransfer && e.dataTransfer.files\r\n");
      out.write("        console.log(files)\r\n");
      out.write("\r\n");
      out.write("        if (files != null) {\r\n");
      out.write("            if (files.length < 1) {\r\n");
      out.write("                alert(\"폴더 업로드 불가\")\r\n");
      out.write("                return\r\n");
      out.write("            }\r\n");
      out.write("            selectFile(files)\r\n");
      out.write("        } else {\r\n");
      out.write("            alert(\"ERROR\")\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("})();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var beginHour = 9;\r\n");
      out.write("var endHour = 19;\r\n");
      out.write("var beginMin = 00;\r\n");
      out.write("var endMin = 00;\r\n");
      out.write("\r\n");
      out.write("var begin = { hour: 9, minute: 30 };\r\n");
      out.write("var end = { hour: 18, minute: 40 };\r\n");
      out.write("\r\n");
      out.write("var datepicker = new tui.DatePicker('#wrapper', {\r\n");
      out.write("    date: new Date(),\r\n");
      out.write("    language: 'ko',\r\n");
      out.write("    input: {\r\n");
      out.write("      element: '#datepicker-input',\r\n");
      out.write("      format: 'yyyy-MM-dd HH:mm A'\r\n");
      out.write("      \r\n");
      out.write("    },\r\n");
      out.write("\r\n");
      out.write("    timePicker: {\r\n");
      out.write("    	 initialHour: 9,\r\n");
      out.write("         initialMinute: 00,\r\n");
      out.write("         inputType: 'selectbox',\r\n");
      out.write("         hourStep: 1,\r\n");
      out.write("         minuteStep: 15,\r\n");
      out.write("         showMeridiem: false,\r\n");
      out.write("    	      \r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("var datepicker1 = new tui.DatePicker('#wrapper-1', {\r\n");
      out.write("    date: new Date(),\r\n");
      out.write("    input: {\r\n");
      out.write("      element: '#datepicker-input-1',\r\n");
      out.write("      format: 'yyyy-MM-dd HH:mm A'\r\n");
      out.write("    },\r\n");
      out.write("    timePicker: {\r\n");
      out.write("   	 initialHour: 9,\r\n");
      out.write("        initialMinute: 00,\r\n");
      out.write("        inputType: 'selectbox',\r\n");
      out.write("        hourStep: 1,\r\n");
      out.write("        minuteStep: 15,\r\n");
      out.write("        showMeridiem: false,\r\n");
      out.write("   	      \r\n");
      out.write("   }\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function regist_go(){\r\n");
      out.write("	\r\n");
      out.write("	if(!$('input[name=\"title\"]').val()){\r\n");
      out.write("		  alert(\"제목은 필수입니다.\");\r\n");
      out.write("		  return;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	if(!$('textarea[name=\"content\"]').val()){\r\n");
      out.write("		  alert(\"내용은 필수입니다.\");\r\n");
      out.write("		  return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	if ($('input[name=\"evalRate\"]').val() < 0) {\r\n");
      out.write("		alert(\"점수비율을 확인하세요\");\r\n");
      out.write("		  return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var formData = new FormData();\r\n");
      out.write("	var uploadFile =$('#fileUpload');\r\n");
      out.write("	var createDate = f_transFormatToTime(datepicker.getDate());\r\n");
      out.write("	var dueDate = f_transFormatToTime(datepicker1.getDate());\r\n");
      out.write("	var title = $('input[name=\"title\"]').val();\r\n");
      out.write("	var content = $('textarea[name=\"content\"]').val();\r\n");
      out.write("	var evalRate = $('input[name=\"evalRate\"]').val();\r\n");
      out.write("	var lecCd = \"");
      out.print(request.getParameter("lecCd"));
      out.write("\";\r\n");
      out.write("	console.log(lecCd);\r\n");
      out.write("	\r\n");
      out.write("	formData.append(\"createDate\",createDate);\r\n");
      out.write("	formData.append(\"dueDate\",dueDate);\r\n");
      out.write("	formData.append(\"title\",title);\r\n");
      out.write("	formData.append(\"content\",content);\r\n");
      out.write("	formData.append(\"evalRate\",evalRate);\r\n");
      out.write("	formData.append(\"lecCd\",lecCd);\r\n");
      out.write("	for(var i=0;i<uploadFile[0].files.length;i++){ //-----------------------@2\r\n");
      out.write("		formData.append(\"uploadFile\",uploadFile[0].files[i]);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("$.ajax({\r\n");
      out.write("	\r\n");
      out.write("	method:\"post\",\r\n");
      out.write("	url: \"");
      out.print(request.getContextPath());
      out.write("/prof/lec/assignment/regist\",\r\n");
      out.write("	contentType : false,\r\n");
      out.write("	processData : false,\r\n");
      out.write("	data:formData,\r\n");
      out.write("	success:function(data){\r\n");
      out.write("// 		console.log(data);\r\n");
      out.write("		\r\n");
      out.write("		Swal.fire(\r\n");
      out.write("			  '성공적으로 과제를 제출했습니다!',\r\n");
      out.write("			  '',\r\n");
      out.write("			  'success'\r\n");
      out.write("		).then(()=>{\r\n");
      out.write("			  CloseWindow();\r\n");
      out.write("		});\r\n");
      out.write("	},\r\n");
      out.write("	error:function(){\r\n");
      out.write("		alert(\"실패\");\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("// 	var ele = document.querySelector(\"input[name='createDate']\").value = createDate;\r\n");
      out.write("// 	var ele = document.querySelector(\"input[name='dueDate']\").value = dueDate;\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
