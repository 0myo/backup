/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-11-24 00:20:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.stu.support;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mbtiPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/6.JspSpring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FinalProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662347357502L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write("#mbti {\r\n");
      out.write("	color: blue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#mainContent {\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiTitle {\r\n");
      out.write("	font-size: medium;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	color: black;\r\n");
      out.write("	top: 20px;\r\n");
      out.write("	left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiClass1 {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	background-color: #FFC6C3;\r\n");
      out.write("	border-radius: 30px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiClass2 {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	background-color: #D2D2FF;\r\n");
      out.write("	border-radius: 30px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiClass3 {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	background-color: #D2FFD2;\r\n");
      out.write("	border-radius: 30px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiClass4 {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("	background-color: #FAFAA0;\r\n");
      out.write("	border-radius: 30px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mbtiContent {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 50px;\r\n");
      out.write("	left: 10px;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("#presentMbti{\r\n");
      out.write("	color : blue;\r\n");
      out.write("	font-size: large;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<!-- MAIN-CONTENT -->\r\n");
      out.write("<!-- ================================================= -->\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("	<div class=\"card\">\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("			<!-- 본문 1 -->\r\n");
      out.write("			<!-- ================================================= -->\r\n");
      out.write("			<div class=\"row flex justify-content-center\">\r\n");
      out.write("\r\n");
      out.write("				<div class=\"col-xl-5 col-lg-5 col-md-5 col-sm-5 col-5\">\r\n");
      out.write("					<div class=\"card\">\r\n");
      out.write("						<div class=\"card-body\">\r\n");
      out.write("							<div class=\"metric-value d-inline-block\">\r\n");
      out.write("								<h3 style=\"display: inline\">나의 MBTI :</h3>\r\n");
      out.write("								<h1 style=\"display: inline\" class=\"mb-1\">\r\n");
      out.write("									<span id=\"mbti\">&nbsp;&nbsp;&nbsp;");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${student.mbtiCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("								</h1>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"card-body bg-light p-t-40 p-b-40\">\r\n");
      out.write("							<div id=\"sparkline-1\">\r\n");
      out.write("								<img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/mbti.png\"\r\n");
      out.write("									style=\"width: 100%; height: 100%\"></img>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"card-footer text-center bg-white\">\r\n");
      out.write("							<p>\r\n");
      out.write("								본 성향진단을 통해 나의 유형을 파악하고,<br> 유사한 그룹의 학우들이 많이 참여한 <br>\r\n");
      out.write("								진로, 취업, 교과, 비교과 관련 내용을 추천받을 수 있습니다.\r\n");
      out.write("							</p>\r\n");
      out.write("							<a href=\"#\" style=\"margin-right: 70px;\"\r\n");
      out.write("								onclick=\"OpenWindow('https://www.16personalities.com/ko/%EB%AC%B4%EB%A3%8C-%EC%84%B1%EA%B2%A9-%EC%9C%A0%ED%98%95-%EA%B2%80%EC%82%AC', 'MBTI검사', 700, 800)\"\r\n");
      out.write("								class=\"btn btn-primary btn-lg\">MBTI 검사하기</a> <a href=\"#\"\r\n");
      out.write("								class=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#mbtiModifyFormModal\">MBTI 수정하기</a>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<!-- MBTI 수정 모달창. -->\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"modal fade\" id=\"mbtiModifyFormModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mbtiModifyFormModalLabel\" aria-hidden=\"true\" style=\"display: none;\">\r\n");
      out.write("					<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("						<div class=\"modal-content\">\r\n");
      out.write("							<div class=\"modal-header\">\r\n");
      out.write("								<h5 class=\"modal-title\" id=\"mbtiModifyFormModalLabel\">MBTI 수정창</h5>\r\n");
      out.write("								<a href=\"#\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("								<span aria-hidden=\"true\">×</span>\r\n");
      out.write("								</a>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-body\">\r\n");
      out.write("								<span>현재 MBTI</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id=\"presentMbti\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${student.mbtiCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span><br>\r\n");
      out.write("								<span>MBTI 수정</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("								<select id=\"mbtiSel\" name=\"mbti\" class=\"form-control\" style=\"width:130px; display:inline;\">\r\n");
      out.write("									<option value=\"\">선택</option>\r\n");
      out.write("									\r\n");
      out.write("									<option value=\"ISTJ\">ISTJ</option>\r\n");
      out.write("									<option value=\"ISFJ\">ISFJ</option>\r\n");
      out.write("									<option value=\"INFJ\">INFJ</option>\r\n");
      out.write("									<option value=\"INTJ\">INTJ</option>\r\n");
      out.write("									<option value=\"ISTP\">ISTP</option>\r\n");
      out.write("									\r\n");
      out.write("									<option value=\"ISFP\">ISFP</option>\r\n");
      out.write("									<option value=\"INFP\">INFP</option>\r\n");
      out.write("									<option value=\"INTP\">INTP</option>\r\n");
      out.write("									<option value=\"ESTP\">ESTP</option>\r\n");
      out.write("									<option value=\"ESFP\">ESFP</option>\r\n");
      out.write("									        \r\n");
      out.write("									<option value=\"ENFP\">ENFP</option>\r\n");
      out.write("									<option value=\"ENTP\">ENTP</option>\r\n");
      out.write("									<option value=\"ESTJ\">ESTJ</option>\r\n");
      out.write("									<option value=\"ESFJ\">ESFJ</option>\r\n");
      out.write("									<option value=\"ENFJ\">ENFJ</option>\r\n");
      out.write("									\r\n");
      out.write("									<option value=\"ENTJ\">ENTJ</option>\r\n");
      out.write("									\r\n");
      out.write("								</select>\r\n");
      out.write("								\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-footer\"> \r\n");
      out.write("								<a href=\"#\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</a>\r\n");
      out.write("								<button class=\"btn btn-primary\" onclick=\"changeMbti()\">수정 내용 저장</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- MBTI 수정 모달창 끝 -->\r\n");
      out.write("				<div class=\"card\">\r\n");
      out.write("					<div class=\"card-header\">\r\n");
      out.write("						<h1>MBTI 유형별 특징</h1>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"card-body\">\r\n");
      out.write("\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"mbtiClass1\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ISTJ 소금형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">한번 시작한 일은 끝까지 해냄</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass2\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ISFJ 권력형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">성실하고 온화하며 협조를 잘함</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass1\">\r\n");
      out.write("								<span class=\"mbtiTitle\">INFJ 예언자형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">사람에 관한 뛰어난 통찰력을 가짐</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass2\">\r\n");
      out.write("								<span class=\"mbtiTitle\">INTJ 과학자형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">전체를 조합하여 비전을 제시함</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"mbtiClass3\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ISTP 백과사전형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">논리적이고 뛰어난 상황 적응력</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass4\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ISFP 성인군자형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">따뜻한 감성을 가지고 있으며 겸손함</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass3\">\r\n");
      out.write("								<span class=\"mbtiTitle\">INFP 잔다르크형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">이상적인 세상을 만들어가는 사람들</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass4\">\r\n");
      out.write("								<span class=\"mbtiTitle\">INTP 아이디어형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">비평적인 관점을 가진 뛰어난 전략가</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"mbtiClass2\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ESTP 활동가형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">친구, 운동, 음식 등 다양함을 선호</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass1\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ESFP 사교형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">분위기를 고조시키는 우호적인 성격</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass2\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ENFP 스파크형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">열정적으로 새 관계를 만드는 사람</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass1\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ENTP 발명가형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">풍부한 상상력으로 새로운 것에 도전</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"mbtiClass4\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ESTJ 사업가형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">사무적, 실용적, 현실적인 스타일</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass3\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ESFJ 친선도모형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">친절, 현실감을 바탕으로 타인에게 봉사</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass4\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ENFJ 언변능숙형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">타인의 성질을 도모하고 협동하는 사람</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"mbtiClass3\">\r\n");
      out.write("								<span class=\"mbtiTitle\">ENTJ 지도자형</span> <span\r\n");
      out.write("									class=\"mbtiContent\">비전을 갖고 타인을 활력적으로 인도</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<hr />\r\n");
      out.write("					<div class=\"card-body\">\r\n");
      out.write("						<p style=\"font-size:18px;\">mbti 검사 후에 ai 추천 서비스를 이용할 수 있습니다.</p>\r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${webPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stu/support/aiRecommend/main\" class=\"btn btn-primary\"\r\n");
      out.write("							style=\"position: absolute; bottom: 10px; right: 10px;\">ai 서비스\r\n");
      out.write("							바로가기</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function changeMbti(){\r\n");
      out.write("	var mbti = $('#mbtiSel').val();\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${webPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stu/support/mbtiChange\",\r\n");
      out.write("		data:{\"mbtiCd\":mbti},\r\n");
      out.write("		success:function(data){\r\n");
      out.write("			$('#presentMbti').html(mbti);\r\n");
      out.write("			$(\"#mbti\").html(mbti);\r\n");
      out.write("		},\r\n");
      out.write("		error:function(){\r\n");
      out.write("			console.log(\"에러\")\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
