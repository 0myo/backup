package kr.or.ddit.controller.staff;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.command.Criteria;
import kr.or.ddit.dto.staff.StaffDualVO;
import kr.or.ddit.dto.staff.StaffStuManageVO;
import kr.or.ddit.dto.staff.StaffTlApplyVO;
import kr.or.ddit.dto.staff.tbl_reserveVO;
import kr.or.ddit.service.staff.StaffDualService;
import kr.or.ddit.service.staff.StaffMajorChangeService;
import kr.or.ddit.service.staff.StaffStuManageService;
import kr.or.ddit.service.staff.StaffTlApplyService;
import kr.or.ddit.service.staff.reserveService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/staff/stuManage")
public class StuManageController {

	@Autowired
	private StaffMajorChangeService staffMajorChangeService;
	@Autowired
	private StaffDualService staffDualService;
	@Autowired
	private StaffTlApplyService staffTlApplyService;
	@Autowired
	private StaffStuManageService staffStuManageService;

	@GetMapping("/graduate/list")
	public String main() {
		String url = "staff/stuManage/graduateList";
		return url;
	}

	@GetMapping("/list")
	public String list(Model model) throws Exception {
		String url = "staff/stuManage/list";

		List<StaffStuManageVO> smList = staffStuManageService.selectStaffStuManageList();
		List<StaffStuManageVO> smpList = staffStuManageService.selectStaffStuManageProfList();

		model.addAttribute("smList", smList);
		model.addAttribute("smpList", smpList);

		return url;
	}

	@GetMapping("/registForm")
	public String userRegist(Model model, HttpServletRequest request) throws Exception {
		String url = "staff/stuManage/poiExcel";
		

		return url;
	}

	/* apache poi */
	@RequestMapping(value = "/regist")
	public String listApplicant(HttpServletRequest request, ModelMap model) throws Exception {

		return "tiles:adms/reserve/applicant/list";
	}

	
	  @RequestMapping(value = "/user/regist", method =
	  RequestMethod.POST) public String createApplicant_action(
	  
	  @ModelAttribute("searchVO") tbl_reserveVO searchVO, RedirectAttributes
	  redirectAttributes, HttpServletRequest request, final
	  MultipartHttpServletRequest multiRequest, ModelMap model) throws Exception {
	  
		/* LoginVO loginVO = loginService.getLoginInfo(); */
	  
	  
	  Map<String, Object> resMap = new HashMap<String, Object>();
	  
	  try{
	  
	  ExcelRequestManager em = new ExcelRequestManager(); final Map<String,
	  MultipartFile> files = multiRequest.getFileMap();
	  List<HashMap<String,String>> apply =null;
	  
	  apply = em.parseExcelSpringMultiPart(files,"applicant", 0, "", "reserve");
	  
	  for(int i = 0; i < apply.size(); i++){
	  
	  searchVO.setStuCd(apply.get(i).get("cell_0"));
	  searchVO.setGrade(apply.get(i).get("cell_1"));
	  searchVO.setName(apply.get(i).get("cell_2"));
	  searchVO.setColName(apply.get(i).get("cell_3"));
	  searchVO.setMajorName(apply.get(i).get("cell_4"));
	  searchVO.setBirthday(apply.get(i).get("cell_5"));
	  searchVO.setPhone(apply.get(i).get("cell_6"));
	  searchVO.setEmail(apply.get(i).get("cell_7"));
	  searchVO.setAcaStateCd(apply.get(i).get("cell_8"));
	  			/*
				 * searchVO.setResv_state(stateType.getMain_code());
				 * 
				 * searchVO.setSite_code(loginService.getSiteCode());
				 * searchVO.setCret_id(loginVO.getId());
				 */
	  searchVO.setCret_ip(request.getRemoteAddr()); searchVO.setResv_gubun("L");
	  
	  reserveService.insertReserveVO(searchVO);
	  
	  }
	  
	  resMap.put("res", "ok"); resMap.put("msg", "txt.success");
	  
	  
	  }catch(Exception e){ System.out.println(e.toString()); resMap.put("res",
	  "error"); resMap.put("msg", "txt.fail"); }
	  
	  
	  redirectAttributes.addFlashAttribute("resMap", resMap); return
	  "redirect:/adms/reserve/applicant/list.do"; }
	 

	@GetMapping("/tl/list")
	public String tlList() throws Exception {
		String url = "staff/stuManage/tlList";
		/*
		 * List<StaffTlApplyVO> tlList = staffTlApplyService.selectStaffTlApplyList();
		 * List<StaffTlApplyVO> backList =
		 * staffTlApplyService.selectStaffBackApplyList();
		 * 
		 * model.addAttribute("tlList", tlList); model.addAttribute("backList",
		 * backList);
		 */

		return url;
	}

	@GetMapping(value = "/tl/huList", produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<Map<String, Object>> huhakList(Criteria cri) throws Exception {

		Map<String, Object> tlList = staffTlApplyService.selectStaffTlApplyList(cri);
		ResponseEntity<Map<String, Object>> entity = new ResponseEntity<Map<String, Object>>(tlList, HttpStatus.OK);

		return entity;

	}

	@GetMapping(value = "/tl/bokList", produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<Map<String, Object>> bokhakList(Criteria cri) throws Exception {

		Map<String, Object> backList = staffTlApplyService.selectStaffBackApplyList(cri);
		ResponseEntity<Map<String, Object>> entity = new ResponseEntity<Map<String, Object>>(backList, HttpStatus.OK);

		return entity;

	}

	@PostMapping(value = "/tlapplyStatus")
	@ResponseBody
	public String tlStatusChange(@RequestBody Map<String, Object> param) throws SQLException {

		staffTlApplyService.updateTlStatus(param);

		log.debug("파람" + param.toString());

		return "tttt";

	}

	@PostMapping(value = "/backapplyStatus")
	@ResponseBody
	public String backStatusChange(@RequestBody Map<String, Object> param) throws SQLException {

		staffTlApplyService.updateBackStatus(param);

		return "bbbb";
	}

	@GetMapping(value = "/majorChange/list", produces = "application/json;charset=utf-8")
	@ResponseBody
	public ModelAndView mcList(Criteria cri, ModelAndView mnv) throws Exception {
		String url = "staff/stuManage/majorChangeList";

		Map<String, Object> dataMap = staffMajorChangeService.selectStaffMajorChangeList(cri);

		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);
		return mnv;
	}

	@RequestMapping("/dual/list")
	public String dual() throws Exception {
		String url = "/staff/stuManage/dualList";

		return url;
	}

	@GetMapping(value = "/dual/dualMajorList", produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<Map<String, Object>> dualMajorList(Criteria cri) throws Exception {

		Map<String, Object> DualList = staffDualService.selectStaffDualList(cri);
		ResponseEntity<Map<String, Object>> entity = new ResponseEntity<Map<String, Object>>(DualList, HttpStatus.OK);

		return entity;

	}

	@GetMapping(value = "/dual/subMajorList", produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<Map<String, Object>> subMajorList(Criteria cri) throws Exception {

		Map<String, Object> SubList = staffDualService.selectStaffSubList(cri);
		ResponseEntity<Map<String, Object>> entity = new ResponseEntity<Map<String, Object>>(SubList, HttpStatus.OK);

		return entity;

	}

	@PostMapping(value = "/majorChange/apply")
	@ResponseBody
	public String changeStatus(@RequestBody Map<String, Object> params) throws SQLException {

		staffMajorChangeService.modifyStatus(params);

		return "ok";

	}

	@RequestMapping("/majorChange/apply")
	public String majorChangeApply(HttpServletRequest request, String applyStatus) throws Exception {
		String url = "redirect:/staff/stuManage/majorChange/list";
		String[] majorChaSeqList = (String[]) request.getParameterValues("checkMajorCha");

		Map<String, Object> dataMap = new HashMap<String, Object>();
		dataMap.put("majorChaSeqList", majorChaSeqList);
		dataMap.put("applyStatus", applyStatus);
		staffMajorChangeService.updateApplyStatus(dataMap);

		return url;
	}

	@RequestMapping("/majorDual/apply")
	public String majoDualApply(HttpServletRequest request, String applyStatus) throws Exception {
		String url = "redirect:/staff/stuManage/dual/list";
		String[] majorChaSeqList = (String[]) request.getParameterValues("checkMajorCha");
		log.info("#############전공 기본키" + majorChaSeqList + "");
		for (int i = 0; i < majorChaSeqList.length; i++) {

		}
		Map<String, Object> dataMap = new HashMap<String, Object>();
		dataMap.put("majorChaSeqList", majorChaSeqList);
		dataMap.put("applyStatus", applyStatus);
		staffMajorChangeService.updateApplyStatus(dataMap);

		return url;
	}
//	
//	@RequestMapping("/tl/apply")
//	public String tlApply(HttpServletRequest request,String applyStatus)throws Exception{
//		String url="redirect:/staff/stuManage/tl/list";
//		String[] tlApplySeqList= (String[])request.getParameterValues("tlApplySeq");
//		
//		log.info("#########휴학컨트롤러" + tlApplySeqList + "");
//		for(int i=0; i<tlApplySeqList.length; i++) {
//			
//		}
//		Map<String,Object> dataMap = new HashMap<String,Object>();
//		dataMap.put("tlApplySeqList",tlApplySeqList);
//		dataMap.put("applyStatus",applyStatus);
//		staffTlApplyService.updateTlStatus(dataMap);
//		
//		return url;
//	}
//	
//	@RequestMapping("/back/apply")
//	public String backApply(HttpServletRequest request,String applyStatus)throws Exception{
//		String url="redirect:/staff/stuManage/tl/list";
//		String[] acaChangeSeqList= (String[])request.getParameterValues("checkBackApply");
//		log.info("#########복학컨트롤러" + acaChangeSeqList + "");
//		log.info("##########복학확인" + applyStatus + "");
//		for(int i=0; i<acaChangeSeqList.length; i++) {
//			
//		}
//		Map<String,Object> dataMap = new HashMap<String,Object>();
//		dataMap.put("acaChangeSeqList",acaChangeSeqList);
//		dataMap.put("applyStatus",applyStatus);
//		staffTlApplyService.updateBackStatus(dataMap);
//		
//		return url;
//	}
//	
//	

}
