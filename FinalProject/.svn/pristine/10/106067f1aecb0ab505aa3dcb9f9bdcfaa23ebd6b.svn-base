package kr.or.ddit.controller.stu;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.dao.prof.LecManageDAO;
import kr.or.ddit.dao.prof.ProfDAO;
import kr.or.ddit.dto.prof.LecManageVO;
import kr.or.ddit.dto.prof.LecOpenVO;
import kr.or.ddit.dto.prof.ProfVO;
import kr.or.ddit.dto.prof.SyllabusVO;
import kr.or.ddit.dto.stu.ApplyPageVO;
import kr.or.ddit.handler.LectureApplyWebSocketHandler;
import kr.or.ddit.service.prof.SyllabusService;
import kr.or.ddit.service.stu.lec.LecOpenService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/stu/lec")
public class StuLecController {

	@Autowired
	private LecOpenService lecOpenService;
	
	@Autowired
	private SyllabusService syllabusService;
	
	@Autowired
	private LecManageDAO lecManageDAO;
	
	@Autowired
	private ProfDAO profDAO;
	
	@RequestMapping("/main.do")
	public String main() {
		String url = "stu/lec/main";
		return url;
	}
	@RequestMapping("/board/main.do")
	public String boardMain() {
		String url = "stu/lec/boardListMain";
		return url;
	}
	
	//서비스쪽 구현 필요.
	@RequestMapping("/eval/main.do")
	public String evalMain(Model model) {
		String url = "stu/lec/evalMain";
		return url;
	}
	@RequestMapping("eval/registForm.do")
	public String evalRegistForm(String lecCd,Model model) {
		String url = "stu/lec/evalRegistForm";
		model.addAttribute("lecCd", lecCd);
		return url;
	}
	
	//필요한 데이터 넘어오는 거 확인함. 서비스쪽 구현 필요.
	@RequestMapping("eval/evalRegist.do")
	public String evalRegist(String eval1,String evalOpinion,String lecCd) {
		String url="redirect:/stu/lec/eval/main.do";
		System.out.println(eval1);
		System.out.println(evalOpinion);
		System.out.println(lecCd);
		return url;
	}
	
	
	
	
	
	
	@RequestMapping("/applyPage")
	public ModelAndView applyPage(ModelAndView mnv) throws SQLException {
		String url = "stu/lec/applyPage";
		mnv.setViewName(url);
		return mnv;
	}
	
	
	@RequestMapping("/getLecJsonList")
	@ResponseBody
	public ResponseEntity<List<ApplyPageVO>> getLectureListJSON() throws SQLException {
		List<ApplyPageVO> applyPageVOList = new ArrayList<ApplyPageVO>();
		
		
		ResponseEntity<List<ApplyPageVO>> entitiy = new ResponseEntity<List<ApplyPageVO>>(applyPageVOList, HttpStatus.OK);
		
		
		List<LecOpenVO> lecList = lecOpenService.selectList();
		for (LecOpenVO vo : lecList) {
			 SyllabusVO sylVO = syllabusService.getSyllabusBySylCd(vo.getLecCd());
			 LecManageVO lecManageVO = lecManageDAO.selectLecManageBySubjCd(sylVO.getSubjCd());
			 ProfVO profVO = profDAO.selectProfByProfId(sylVO.getProfId());
			 
			 
			 ApplyPageVO applyPageVO = new ApplyPageVO();
			 applyPageVO.setClassroom(sylVO.getClassroom());
			 applyPageVO.setCredit(lecManageVO.getCredit());
			 applyPageVO.setLecCd(vo.getLecCd());
			 applyPageVO.setLecDate1(sylVO.getLecDate1());
			 applyPageVO.setLecDate2(sylVO.getLecDate2());
			 applyPageVO.setMaxStuNum(sylVO.getMaxStuNum());
			 applyPageVO.setName(profVO.getName());
			 applyPageVO.setStuNum(vo.getStuNum());
			 applyPageVO.setSubjName(lecManageVO.getSubjName());
			 applyPageVO.setTargetGrade(lecManageVO.getTargetGrade());
			 applyPageVO.setId(vo.getLecCd());
			 applyPageVOList.add(applyPageVO);
			 
			 
		}
		return entitiy;
	}
	
	
	@RequestMapping("/getAppliedLecList")
	@ResponseBody
	public ResponseEntity<List<ApplyPageVO>> getAppliedLecList() throws SQLException {
		
		
//		ResponseEntity<List<ApplyPageVO>> entitiy = new ResponseEntity<List<ApplyPageVO>>(applyPageVOList, HttpStatus.OK);
		
		
		return null;
	}
	
	
	@GetMapping("/board/main")
	public String mylectureBoard(String lecCode,Model model){
		String url="stu/lec/lecBoardMain";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@GetMapping("/mylecture/index")
	public String mylectureMain(String lecCode,Model model){
		String url="stu/lec/myLectureIndex";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	@GetMapping("/mylecture/main")
	public String mylectureMain() {
		String url = "stu/lec/myLectureMain";
		return url;
	}
	
	@GetMapping("/mylecture/assign/list")
	public String myLectureAssignList(String lecCode,Model model){
		String url="stu/lec/myLectureAssignList";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@GetMapping("/mylecture/assign/summaryPage")
	public String myLectureAssignSummaryPage(String lecCode,Model model){
		String url="stu/lec/myLectureAssignSummaryPage";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@GetMapping("/mylecture/assign/syllabus")
	public String myLectureAssignsyllabus(String lecCode,Model model){
		String url="stu/lec/myLectureAssignsyllabus";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@GetMapping("/mylecture/assign/pds/detail")
	public String myLectureAssignPdsDetail(String lecCode,Model model){
		String url="stu/lec/myLectureAssignPdsDetail";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@GetMapping("/mylecture/assign/pds/list")
	public String myLectureAssignPdsList(String lecCode,Model model){
		String url="stu/lec/myLectureAssignPdsList";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@RequestMapping("/mylecture/assign/qna/list")
	public String myLectureAssignQnaList(String lecCode,Model model) {
		String url="stu/lec/myLectureAssignQnaList";
		model.addAttribute("lecCode",lecCode);
		return url;
	}
	
	@RequestMapping("/mylecture/assign/qna/detail")
	public String myLectureAssignQnaDetail(String lecCode,Model model) {
		String url="stu/lec/myLectureAssignQnaDetail";
		return url;
	}
	
	@RequestMapping("/mylecture/assign/qna/regist")
	public String myLectureAssignQnaRegist(String lecCode,Model model) {
		String url="stu/lec/myLectureAssignQnaRegist";
		return url;
	}
	
	@RequestMapping("/changePage")
	public String changePage() {
		String url = "stu/lec/changePage";
		return url;
	}
	
	@RequestMapping("/withdrawPage")
	public String withdrawPage() {
		String url = "stu/lec/withdrawPage";
		return url;
	}
	
	@RequestMapping("/timetable")
	public String timetable() {
		String url = "stu/lec/timetable";
		return url;
	}
	
	@PutMapping(value="/apply",produces = "application/json;charset=utf-8")
	@ResponseBody
	public LecOpenVO apply(@RequestParam("lecCd") String lecCd ,LectureApplyWebSocketHandler handler) throws SQLException, IOException {
		lecOpenService.addStuNum(lecCd);
		LecOpenVO vo = lecOpenService.selectOne(lecCd);
		handler.sendLectureApplicant(vo);
		return vo;
	}
	
}
