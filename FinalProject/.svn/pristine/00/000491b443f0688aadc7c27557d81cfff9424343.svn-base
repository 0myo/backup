package kr.or.ddit.controller.stu;

import java.sql.SQLException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.command.stu.SearchMajorCommand;
import kr.or.ddit.dto.common.MemberVO;
import kr.or.ddit.dto.common.SemesterVO;
import kr.or.ddit.dto.stu.ChangeMajorVO;
import kr.or.ddit.dto.stu.ClubVO;
import kr.or.ddit.dto.stu.CollegeVO;
import kr.or.ddit.dto.stu.MajorVO;
import kr.or.ddit.dto.stu.StuMajorVO;
import kr.or.ddit.dto.stu.StudentVO;
import kr.or.ddit.dto.stu.TlApplyVO;
import kr.or.ddit.service.stu.InfoService;
import kr.or.ddit.service.stu.aca.ChangeMajorService;
import kr.or.ddit.service.stu.aca.StuMajorService;
import kr.or.ddit.service.stu.aca.TlApplyService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/stu/aca")
public class AcaController {

	@Autowired
	private InfoService infoService;

	@Autowired
	private TlApplyService tlApplyService;

	@Autowired
	private ChangeMajorService changeMajorService;

	@Autowired
	private StuMajorService stuMajorService;

	@RequestMapping("/main")
	public String main() {
		String url = "stu/aca/main";
		return url;
	}

	@RequestMapping(value = "/majorList", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<List<MajorVO>> majorList(String collegeCd) throws SQLException {
		ResponseEntity<List<MajorVO>> entity = null;
		List<MajorVO> majorList = changeMajorService.selectMajorListByCollegeCd(collegeCd);
		entity = new ResponseEntity<List<MajorVO>>(majorList, HttpStatus.OK);
		return entity;
	}

	@RequestMapping(value = "/searchMajorList", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
	@ResponseBody
	public ResponseEntity<List<ChangeMajorVO>> searchMajorList(HttpServletRequest request,
			SearchMajorCommand searchMajorCommand) throws Exception {
		log.info("collegeCd : " + searchMajorCommand.getColCd());
		log.info("majorCd : " + searchMajorCommand.getMajorCd());
		HttpSession session = request.getSession();
		SemesterVO semester = (SemesterVO) session.getAttribute("semester");
		searchMajorCommand.setSemeCd(semester.getSemeCd());
		List<ChangeMajorVO> changeMajorList = changeMajorService.selectSearchMajorList(searchMajorCommand);
		ResponseEntity<List<ChangeMajorVO>> entity = null;
		entity = new ResponseEntity<List<ChangeMajorVO>>(changeMajorList, HttpStatus.OK);
		return entity;
	}

	@GetMapping("/info")
	public String info(HttpServletRequest request, Model model) throws Exception {
		String url = "stu/aca/info";
		HttpSession session = request.getSession();
		StudentVO studentVO = (StudentVO) session.getAttribute("member");
		String stuCd = studentVO.getStuCd();
		StudentVO student = infoService.getInfo(stuCd);
		ClubVO clubVO = stuMajorService.selectClub(stuCd);
		List<StuMajorVO> stuMajor = stuMajorService.selectStuMajorList(stuCd);
		String colName = stuMajorService.selectCollegeNameByMajorCd(stuMajor.get(0).getMajorCd());
		model.addAttribute("stuMajor", stuMajor);
		model.addAttribute("colName", colName);
		model.addAttribute("club", clubVO.getClubName());
		model.addAttribute("student", student);
		return url;
	}

	@GetMapping("/info/modifyForm")
	public String infoModifyForm(HttpServletRequest request, Model model) throws Exception {
		String url = "stu/aca/infoModifyForm";
		HttpSession session = request.getSession();
		StudentVO studentVO = (StudentVO) session.getAttribute("member");
		String stuCd = studentVO.getStuCd();
		StudentVO student = infoService.getInfo(stuCd);
		model.addAttribute("student", student);

		return url;
	}

	@RequestMapping("/modify_success")
	public ModelAndView modifyForm(StudentVO student, HttpServletRequest request, ModelAndView mnv,
			RedirectAttributes rttr) throws SQLException {
		String url = "redirect:/stu/aca/info";
		/*
		 * 세션에서 로그인한 유저 정보 꺼내기.(학생의경우) HttpSession session = request.getSession();
		 * StudentVO student = (StudentVO)session.getAttribute("member");
		 */

		HttpSession session = request.getSession();
		StudentVO studentVO = (StudentVO) session.getAttribute("member");
		student.setStuCd(studentVO.getStuCd());
		infoService.modifyInfo(student);
		rttr.addFlashAttribute("from", "modify");
		mnv.setViewName(url);
		return mnv;
	}

	@GetMapping("/info/account/modifyForm")
	public String infoAccountModifyForm(Model model) throws Exception {
		String url = "stu/aca/infoAccountModifyForm";

		return url;
	}

	@RequestMapping("/info/account/modify_success")
	public ModelAndView infoAccountModifyForm(StudentVO student, HttpServletRequest request, ModelAndView mnv,
			RedirectAttributes rttr) throws SQLException {
		String url = "redirect:/stu/aca/info";
		log.info("계좌번호 : " + student.getAccNum());
		HttpSession session = request.getSession();
		StudentVO studentVO = (StudentVO) session.getAttribute("member");
		student.setStuCd(studentVO.getStuCd());
		infoService.modifyAccount(student);
		rttr.addFlashAttribute("from", "modify");
		mnv.setViewName(url);
		return mnv;
	}

	@GetMapping("/changeMajor/main")
	public String changeMajorMain(Model model, HttpServletRequest request) throws SQLException {
		String url = "stu/aca/changeMajorMain";
		HttpSession session = request.getSession();
		StudentVO student = (StudentVO) session.getAttribute("member");
		String stuCd = student.getStuCd();
		List<CollegeVO> collegeList = changeMajorService.selectCollegeList();
		List<ChangeMajorVO> majorChangeApplyList = changeMajorService.selectMajorChangeApplyList(stuCd);
		model.addAttribute("collegeList", collegeList);
		model.addAttribute("majorChangeApplyList", majorChangeApplyList);
		return url;
	}

	@PostMapping("/changeMajor/modify")
	@ResponseBody
	public String changeMajorModify(String phone, HttpServletRequest request) throws Exception {
		String result = "success";
		HttpSession session = request.getSession();
		StudentVO student = (StudentVO) session.getAttribute("member");
		student.setPhone(phone);
		changeMajorService.updateStuPhone(student);
		return result;
	}

	@GetMapping("/changeMajor/applyPage")
	public String changeMajorPage(String colName, String majorName, Model model) {
		String url = "stu/aca/changeMajorPage";
		model.addAttribute("colName", colName);
		model.addAttribute("majorName", majorName);
		return url;
	}

	@GetMapping("/changeMajor/apply")
	public String changeMajorApply(String majorName, Model model, HttpServletRequest request, RedirectAttributes rttr)
			throws Exception {
		String url = "redirect:/stu/aca/changeMajor/main";
		ChangeMajorVO changeMajor = new ChangeMajorVO();
		HttpSession session = request.getSession();
		SemesterVO semester = (SemesterVO) session.getAttribute("semester");
		StudentVO student = (StudentVO) session.getAttribute("member");
		changeMajor.setStuCd(student.getStuCd());
		changeMajor.setMajorName(majorName);
		changeMajor.setSemeCd(semester.getSemeCd());
		changeMajor.setApplyStatusCd("ing");
		changeMajor.setMajClassCd("1");
		changeMajorService.changeMajorApply(changeMajor);
		rttr.addFlashAttribute("from", "apply");
		return url;
	}

	@GetMapping("/tl/applyPage")
   public String tl(Model model,HttpServletRequest request) throws Exception{
      String url = "stu/aca/tlList";
  
	  HttpSession session = request.getSession(); MemberVO member =
      (MemberVO)session.getAttribute("loginUser");
	  String stuCd = member.getMemId();
	  StudentVO student = infoService.getInfo(stuCd);
      List<TlApplyVO> tlList = tlApplyService.getTlListByStuId(stuCd);
      model.addAttribute("tlList", tlList);
      model.addAttribute("student",student);
      return url;
   }

	@GetMapping("/dualMajor/main")
	public String dualMajorMain(Model model) throws SQLException {
		String url = "stu/aca/dualMajorMain";
		List<CollegeVO> collegeList = changeMajorService.selectCollegeList();
		model.addAttribute("collegeList", collegeList);
		return url;
	}

	@GetMapping("/dualMajor/applyPage")
	public String dualMajorPage(String colName, String majorName, Model model) {
		String url = "stu/aca/dualMajorPage";
		model.addAttribute("colName", colName);
		model.addAttribute("majorName", majorName);
		return url;
	}

	@GetMapping("/graduate")
	public String graduate() {
		String url = "stu/aca/graduate";
		return url;
	}

	@GetMapping("/graduate/info")
	public String graduateInfo() {
		String url = "stu/aca/graduateInfo";
		return url;
	}

	@GetMapping("/graduate/applyPage")
	public String graduatePage() {
		String url = "stu/aca/graduatePage";
		return url;
	}

}