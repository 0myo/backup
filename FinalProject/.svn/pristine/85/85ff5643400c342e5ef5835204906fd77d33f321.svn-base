package kr.or.ddit.dao.stu.support;

import java.sql.SQLException;
import java.util.List;

import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;

import kr.or.ddit.command.Criteria;
import kr.or.ddit.dto.stu.StudyShareVO;

public class ShareDAOImpl implements ShareDAO {

	private SqlSession session;
	public void setSqlSession(SqlSession session) {
		this.session = session;
	}
	
	@Override
	public List<StudyShareVO> selectShare(Criteria cri) throws SQLException {
		int offset = cri.getStartRowNum();
		int limit = cri.getPerPageNum();
		RowBounds rowBounds = new RowBounds(offset,limit);
		
		List<StudyShareVO> shareList = session.selectList("Share-Mapper.selectShare",rowBounds);
		
		return shareList;
	}
	
	@Override
	public List<StudyShareVO> selectShareByLec(Criteria cri) throws SQLException {
		int offset = cri.getStartRowNum();
		int limit = cri.getPerPageNum();
		RowBounds rowBounds = new RowBounds(offset,limit);
		
		List<StudyShareVO> shareListByLec = session.selectList("Share-Mapper.selectShareByLec",rowBounds);
		
		return shareListByLec;
	}

	@Override
	public List<StudyShareVO> selectShareOrderByReco() throws SQLException {
		return session.selectList("Share-Mapper.selectShareOrderByReco");
	}

	@Override
	public List<StudyShareVO> selectShareByLecOrderByReco() throws SQLException {
		return session.selectList("Share-Mapper.selectShareByLecOrderByReco");
	}
	
	@Override
	public void updateShareByLec(StudyShareVO StudyShare) throws SQLException {
		session.update("Share-Mapper.updateShareByLec",StudyShare);
		
	}
	
	@Override
	public int selectAllTotalCount(Criteria cri) throws SQLException {
		return session.selectOne("Share-Mapper.selectAllTotalCount", cri);
	}
	
	@Override
	public int selectLecTotalCount(Criteria cri) throws SQLException {
		return session.selectOne("Share-Mapper.selectLecTotalCount", cri);
	}
	
}
