<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>

<head>

<script
	src="https://unpkg.com/ag-grid-community/dist/ag-grid-community.min.js"></script>
</head>
<!-- ================================================= -->
<!-- MAIN-CONTENT -->
<!-- ================================================= -->
<div class="container-fluid">
	<div class="row">
		<div class="col-xl-8 pr-2 pl-0">


			<div class="card mb-0">
				<div class="card-header tab-regular">
					<ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
						<li class="nav-item"><a class="nav-link active show"
							id="card-tab-1" data-toggle="tab" href="#card-1" role="tab"
							aria-controls="card-1" aria-selected="true">전체강의</a></li>
						<li class="nav-item"><a class="nav-link" id="card-tab-2"
							data-toggle="tab" href="#card-2" role="tab"
							aria-controls="card-2" aria-selected="false">신청강의</a></li>

					</ul>
				</div>

				<!-- 탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1탭1 -->
				<div class="card-body mb-0" style="height: 675px;">
					<div class="tab-content" id="myTabContent">
						<div class="tab-pane fade active show" id="card-1" role="tabpanel"
							aria-labelledby="card-tab-1">
							<div class="card">
								<div class="card-body">


									<div id="myGrid" class="ag-theme-alpine" style="height: 500px"></div>


								</div>

							</div>
						</div>


						<div class="tab-pane fade" id="card-2" role="tabpanel"
							aria-labelledby="card-tab-2">


							<div class="card">
								<div class="card-header">
									<table>
										<thead>
											<tr>
												<th><h4>신청결과</h4></th>
												<th><h6>13 / 24점 (신청학점/신청가능학점)</h6></th>
											</tr>
										</thead>
									</table>
								</div>
								<div class="card-body" id="appliedDIV"></div>
							</div>



						</div>

					</div>
				</div>
			</div>


			<!-- ================================================= -->
			<!-- 본문 1 -->
			<!-- ================================================= -->

			<!-- ================================================= -->
			<!-- ================================================= -->

			<!-- ================================================= -->

			<!-- ================================================= -->


		</div>
		<div class="col-xl-4 pl-2 pr-0 ">
			<div class="card mb-0"
				style="display: inline-block; position: relative;">

				<canvas id="grid" width="600" height="744"
					style="vertical-align: top; z-index: 3"></canvas>
				<canvas id="outline" width="600" height="744"
					style="position: absolute; left: 0; top: 0; z-index: 2;"></canvas>

			</div>
		</div>
		<!-- ================================================= -->
		<!-- MAIN-CONTENT 끝 -->
		<!-- ================================================= -->
	</div>
</div>

<script>
/////////////////////////////////////////////////////////
// canvas
/////////////////////////////////////////////////////////

var dates = [ "월", "화", "수", "목", "금" ];
var hours = [ " 9", "10", "11", "12", "13", "14", "15", "16", "17" ];

const grid = document.getElementById('grid');
const outline = document.getElementById('outline');
const gridCtx = grid.getContext("2d");
const outlinegridCtx = outline.getContext("2d");

for (var i = 50; i < 744; i = i + 70) {

	gridCtx.beginPath();
	gridCtx.moveTo(50, i);
	gridCtx.lineTo(505, i);
	gridCtx.stroke();
}

for (var i = 50; i <= 600; i = i + 91) {
	gridCtx.beginPath();
	gridCtx.moveTo(i, 50);
	gridCtx.lineTo(i, 680);
	gridCtx.stroke();
}
var horiIndex = 85;
for (var i = 0; i < dates.length; i++) {
	gridCtx.font = "20px malgun gothic";
	gridCtx.fillStyle = "rgb(162, 162, 162)";
	gridCtx.fillText(dates[i], horiIndex, 30);
	horiIndex = horiIndex + 91;
}

var vertiIndex = 65;
for (var i = 0; i < hours.length; i++) {
	gridCtx.font = "15px malgun gothic";
	gridCtx.fillStyle = "rgb(162, 162, 162)";
	gridCtx.fillText(hours[i], 30, vertiIndex);
	vertiIndex = vertiIndex + 70;
}

/////////////////////////////////////////////////////////
						// ag-grid
/////////////////////////////////////////////////////////
const columnDefs2 = [
    { headerName:"과목명",field: "subjName" },
    { headerName:"단과대",field: "colName" },
    { headerName:"교양코드",field: "geCd" },
    { headerName:"학과코드",field: "majorName" },
    { headerName:"교수명",field: "profName" },
    { headerName:"학점",field: "credit" },
    { headerName:"강의실",field: "classroom"},
    { headerName:"수강인원",field: "stuNum" },
    { headerName:"최대인원",field: "maxStuNum" },
    { headerName:"대상학년",field: "targetGrade" },
    { headerName:"날짜1",field: "lecDate1"},
    { headerName:"날짜2",field: "lecDate2" },
];


	const gridOptions = {
	        defaultColDef: {
	            sortable:true,
	            filter:true,
	            resizable:true,
	            editable:false
	    },
	    pagination:true,
	    paginationAutoPageSize:true,
	    getRowId: params => params.data.lecCd,
	    
	    
	    //마우스 올렸을때//
	    onCellMouseOver :function(params){
	    	
	    	outlinegridCtx.strokeStyle = "orange";

 			outlinegridCtx.lineWidth = 5;
	    	
	     var firstSchdule = params.data.lecDate1
	     var secondSchdule = params.data.lecDate2
	     var schedules = []
	     schedules.push(firstSchdule)
	     if(secondSchdule){
	    	 schedules.push(secondSchdule)
	     }
	     
	     for (var i = 0; i < schedules.length; i++) {
	 		if (schedules[i].substring(0, 1) == "월") {
	 			
	 			var startTime = parseInt(schedules[i].substring(2, 4));
	 			var endTime = parseInt(schedules[i].substring(10, 12));

	 			var x = 50;
	 			var y = 50 + (70 * (startTime - 9));

	 			var verticalSize = endTime - startTime;

	 			
				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);
	 		}
	 		if (schedules[i].substring(0, 1) == "화") {
				var startTime = parseInt(schedules[i].substring(2, 4));
				var endTime = parseInt(schedules[i].substring(10, 12));
				var x = 50 + 91;
				var y = 50 + (70 * (startTime - 9));

				var verticalSize = endTime - startTime;

				
			
				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);
				
				
			}
			if (schedules[i].substring(0, 1) == "수") {
				var startTime = parseInt(schedules[i].substring(2, 4));
				var endTime = parseInt(schedules[i].substring(10, 12));
				var x = 50 + 91 + 91;
				var y = 50 + (70 * (startTime - 9));
				var verticalSize = endTime - startTime;

		
				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);
				
				
			}

			if (schedules[i].substring(0, 1) == "목") {
				var startTime = parseInt(schedules[i].substring(2, 4));
				var endTime = parseInt(schedules[i].substring(10, 12));
				var x = 50 + 91 + 91 + 91;
				var y = 50 + (70 * (startTime - 9));
				var verticalSize = endTime - startTime;

		
			
				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);
			}
			if (schedules[i].substring(0, 1) == "금") {
				var startTime = parseInt(schedules[i].substring(2, 4));
				var endTime = parseInt(schedules[i].substring(10, 12));
				var xTune = 4
				var x = 50 + 91 + 91 + 91 + 91;
				var y = 50 + (70 * (startTime - 9));
				var verticalSize = endTime - startTime;

				
				
				outlinegridCtx.strokeRect(x, y, 91, 70 * verticalSize);
			}
	     }
	     
	    },
	    //마우스 in 끝//
	    //마우스 out//
	    onCellMouseOut :function(params){
	    	outlinegridCtx.clearRect(0, 0, 600, 744);
	    },
	  //마우스 out 끝//
	    
	    //마우스 더블클릭시//
	    onCellDoubleClicked : function(params){
	    	
	    	
	    	 var firstSchdule = params.data.lecDate1;
		     var secondSchdule = params.data.lecDate2;
		     var schedules = [];
		     schedules.push(firstSchdule);
		     if(secondSchdule){
		    	 schedules.push(secondSchdule);
		     }
		     
		     for (var i = 0; i < schedules.length; i++) {
		 		if (schedules[i].substring(0, 1) == "월") {
		 			
		 			var startTime = parseInt(schedules[i].substring(2, 4));
		 			var endTime = parseInt(schedules[i].substring(10, 12));

		 			var x = 50;
		 			var y = 50 + (70 * (startTime - 9));

		 			var verticalSize = endTime - startTime;

		 			
		 			var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);
		 			for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){alert("중복");return;}}
		 			
		 			if (verticalSize == 2) {
		 			var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);
		 			for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){alert("중복");return;}}
					}
		 			
		 			
		 			
		 		}
		 		if (schedules[i].substring(0, 1) == "화") {
					var startTime = parseInt(schedules[i].substring(2, 4));
					var endTime = parseInt(schedules[i].substring(10, 12));
					var x = 50 + 91;
					var y = 50 + (70 * (startTime - 9));

					var verticalSize = endTime - startTime;

					var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);
		 			for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){alert("중복");return;}}
		 			
		 			if (verticalSize == 2) {
		 			var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);
		 			for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){alert("중복");return;}}
					}

					
				}
				if (schedules[i].substring(0, 1) == "수") {
					var startTime = parseInt(schedules[i].substring(2, 4));
					var endTime = parseInt(schedules[i].substring(10, 12));
					var x = 50 + 91 + 91;
					var y = 50 + (70 * (startTime - 9));
					var verticalSize = endTime - startTime;

					var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);
		 			for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){alert("중복");return;}}
		 			
		 			if (verticalSize == 2) {
		 			var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);
		 			for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){alert("중복");return;}}
					}
					
					
				}

				if (schedules[i].substring(0, 1) == "목") {
					var startTime = parseInt(schedules[i].substring(2, 4));
					var endTime = parseInt(schedules[i].substring(10, 12));
					var x = 50 + 91 + 91 + 91;
					var y = 50 + (70 * (startTime - 9));
					var verticalSize = endTime - startTime;

					var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);
		 			for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){alert("중복");return;}}
		 			
		 			if (verticalSize == 2) {
		 			var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);
		 			for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){alert("중복");return;}}
					}

					
				}
				if (schedules[i].substring(0, 1) == "금") {
					var startTime = parseInt(schedules[i].substring(2, 4));
					var endTime = parseInt(schedules[i].substring(10, 12));
					var xTune = 4
					var x = 50 + 91 + 91 + 91 + 91;
					var y = 50 + (70 * (startTime - 9));
					var verticalSize = endTime - startTime;

					
					var colorcode1 = gridCtx.getImageData(x+20,y+20, 1, 1);
		 			for (var k = 0; k < 4; k++) {if(colorcode1.data[k] != 0){alert("중복");return;}}
		 			
		 			if (verticalSize == 2) {
		 			var colorcode2 = gridCtx.getImageData(x+20,y+20 + 70, 1, 1);
		 			for (var s = 0; s < 4; s++) {if(colorcode2.data[s] != 0){alert("중복");return;}}
					}
		 		
	    	 	}
		     }//for end
	    	
		     if (params.data.stuNum >= params.data.maxStuNum) {
					alert("꽉참");
					return;
				}
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	
	    	 $.ajax({
	             type:"put",  
	             url:"<%=request.getContextPath()%>/stu/lec/apply?lecCd="+params.data.lecCd,
	             data: JSON.stringify({
	                 lecCd:params.data.lecCd
	              }),
              	 contentType : "application/json; charset=utf-8", 
	             success:(rslt)=>{
// 	                console.log("너머온값",rslt); // 요게 있어야 항상 디버깅이 편함
	             },
	             error:(request,status,error)=>{
	                alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
	             }
	          });
	    	 
    		//더블클릭 끝
	    }
	    
	    
	    
	};
	
	fetch("<%=request.getContextPath()%>/stu/lec/getLecJsonList")
	.then(response => response.json())
	.then(data => { //ajax로 치면 success(data)와 같음
		// 컬럼설정
		gridOptions.api.setColumnDefs(columnDefs2);     
		// 데이터 설정
		gridOptions.api.setRowData(data);
	});
	
	document.addEventListener('DOMContentLoaded', () => {
        const gridDiv = document.querySelector('#myGrid');
        new agGrid.Grid(gridDiv, gridOptions);
        
        var webSocket = new WebSocket("ws://192.168.141.15/<%=request.getContextPath()%>/ws-lectureApply");
    	
    	webSocket.onmessage = function(e){
    		
    		var splitData = e.data.split(":");
    		var lecId = splitData[0];
    		var applicatns = splitData[1];
    		var rowNode = gridOptions.api.getRowNode(lecId);
    		rowNode.setDataValue('stuNum', applicatns);

    	}

    }); 
	
	
</script>
<script>
var appliedDIV = document.querySelector('#appliedDIV');

$(function(){
	$.ajax({
		type:"get",
		url:"<%=request.getContextPath()%>/stu/lec/getAppliedLecList",
		dataType:"json", 
		success:(rslt)=>{
// 			console.log("너머온값",rslt); 
			
			var vtblStr = "<table class='table table-hover'>";
			vtblStr += "<tr><th>과목명</th><th>교수명</th></tr>";
		    //배열 데이터 반복
			for(var i=0; i<rslt.length; i++){
				vtblStr += "<tr class='appliedLists'>";
				vtblStr += `<td>\${rslt[i].subjName}</td>`;
				vtblStr += `<td>\${rslt[i].profName}</td>`;					
				vtblStr += "</tr>";
			}		
		    vtblStr += "</table>";
		    appliedDIV.innerHTML = vtblStr;	
			//시퀀스상 테이블 tr에 이벤트를 주려면 테이블이 만들어진 후에
			
			for (var i = 0; i < rslt.length; i++) {
					var randomColor = Math.floor(Math.random()*16777215).toString(16);
					var subjName = rslt[i].subjName;
					
					gridCtx.font ="10pt Fira";
		 			gridCtx.fillStyle = '#'+randomColor;
				
				var schedules = []
			     schedules.push(rslt[i].lecDate1)
			     if(rslt[i].lecDate2){
			    	 schedules.push(rslt[i].lecDate2)
			     }
			
				
				for (var j = 0; j < schedules.length; j++) {
					
					if (schedules[j].substring(0, 1) == "월") {
						
			 			var startTime = parseInt(schedules[j].substring(2, 4));
			 			var endTime = parseInt(schedules[j].substring(10, 12));

			 			var x = 50;
			 			var y = 50 + (70 * (startTime - 9));

			 			var verticalSize = endTime - startTime;

			 			gridCtx.fillRect(x, y, 91 , 70 * verticalSize);
			 			gridCtx.strokeText(subjName, x+20, y+20);
						
			 		}
			 		if (schedules[i].substring(0, 1) == "화") {
						var startTime = parseInt(schedules[j].substring(2, 4));
						var endTime = parseInt(schedules[j].substring(10, 12));
						var x = 50 + 91;
						var y = 50 + (70 * (startTime - 9));

						var verticalSize = endTime - startTime;

						gridCtx.fillRect(x, y, 91, 70 * verticalSize);
			 			gridCtx.strokeText(subjName, x+20, y+20);
						
					}
					if (schedules[j].substring(0, 1) == "수") {
						var startTime = parseInt(schedules[j].substring(2, 4));
						var endTime = parseInt(schedules[j].substring(10, 12));
						var x = 50 + 91 + 91;
						var y = 50 + (70 * (startTime - 9));
						var verticalSize = endTime - startTime;

						gridCtx.fillRect(x, y, 91, 70 * verticalSize);
			 			gridCtx.strokeText(subjName, x+20, y+20);
					}

					if (schedules[j].substring(0, 1) == "목") {
						var startTime = parseInt(schedules[j].substring(2, 4));
						var endTime = parseInt(schedules[j].substring(10, 12));
						var x = 50 + 91 + 91 + 91;
						var y = 50 + (70 * (startTime - 9));
						var verticalSize = endTime - startTime;

						gridCtx.fillRect(x, y, 91, 70 * verticalSize);
			 			gridCtx.strokeText(subjName, x+20, y+20);
					}
					if (schedules[j].substring(0, 1) == "금") {
						var startTime = parseInt(schedules[j].substring(2, 4));
						var endTime = parseInt(schedules[j].substring(10, 12));
						var x = 50 + 91 + 91 + 91 + 91;
						var y = 50 + (70 * (startTime - 9));
						var verticalSize = endTime - startTime;

						gridCtx.fillRect(x, y, 91, 70 * verticalSize);
			 			gridCtx.strokeText(subjName, x+20, y+20);
			 			
					}
				}
			}
			
			
			
			
			
			$(".appliedLists").on("dblclick",function(){
				confirm("");
				console.log(this);
				
// 				var startTime = parseInt(schedules[i].substring(2, 4));
// 				var endTime = parseInt(schedules[i].substring(10, 12));
// 				var x = 50 + 91 + 91 + 91 + 91;
// 				var y = 50 + (70 * (startTime - 9));
// 				var verticalSize = endTime - startTime;

				
// 				//어떤 DOM 객체든 jQuery메소드를 쓰려면 $()로 묶어주면 끝
// 				 //console.log($(this));
// 				 //console.log(this.children[0].innerHTML);
// 				 //console.log($(this).children().eq(0).html());
// 				 var chinId = this.children[0].innerHTML;
// 				 $.ajax({
// 						type:"get",
// 						url:"/sample/hyerim/" + chinId,
// 						dataType:"json", // 보통 받아온 데이터에 JSON.parse를 할지 안할지 여부
// 						success:(rslt)=>{
// 							console.log(rslt); // 요게 있어야 항상 디버깅이 편함
// 							$("input[name=namId]").val(rslt.namId);
// 							$("input[name=namName]").val(rslt.namName);
// 							$("input[name=namTel]").val(rslt.namTel);
// 							$("input[name=namGrade]").val(rslt.namGrade);
							
// 						},
// 						error:(request,status,error)=>{
// 							alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
// 						}
// 					});
			});
			
			
			
		},
		error:(request,status,error)=>{
			alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
		}
	});
})


</script>




